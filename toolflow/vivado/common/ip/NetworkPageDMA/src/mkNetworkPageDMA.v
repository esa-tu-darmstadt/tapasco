//
// Generated by Bluespec Compiler (build 69dee06)
//
// On Wed Jan 26 11:41:50 CET 2022
//
//
// Ports:
// Name                         I/O  size props
// intr_c2h                       O     1
// intr_h2c                       O     1
// S_AXI_CTRL_arready             O     1
// S_AXI_CTRL_rvalid              O     1
// S_AXI_CTRL_rdata               O    64
// S_AXI_CTRL_rresp               O     2
// S_AXI_CTRL_awready             O     1
// S_AXI_CTRL_wready              O     1
// S_AXI_CTRL_bvalid              O     1
// S_AXI_CTRL_bresp               O     2
// M_AXI_PCI_arvalid              O     1
// M_AXI_PCI_araddr               O    64
// M_AXI_PCI_arlen                O     8
// M_AXI_PCI_arsize               O     3
// M_AXI_PCI_arburst              O     2
// M_AXI_PCI_arlock               O     1
// M_AXI_PCI_arcache              O     4
// M_AXI_PCI_arprot               O     3
// M_AXI_PCI_arqos                O     4
// M_AXI_PCI_arregion             O     4
// M_AXI_PCI_rready               O     1
// M_AXI_PCI_awvalid              O     1
// M_AXI_PCI_awaddr               O    64
// M_AXI_PCI_awlen                O     8
// M_AXI_PCI_awsize               O     3
// M_AXI_PCI_awburst              O     2
// M_AXI_PCI_awlock               O     1
// M_AXI_PCI_awcache              O     4
// M_AXI_PCI_awprot               O     3
// M_AXI_PCI_awqos                O     4
// M_AXI_PCI_awregion             O     4
// M_AXI_PCI_wvalid               O     1
// M_AXI_PCI_wdata                O   512
// M_AXI_PCI_wstrb                O    64
// M_AXI_PCI_wlast                O     1
// M_AXI_PCI_bready               O     1
// M_AXI_MEM_arvalid              O     1
// M_AXI_MEM_araddr               O    32
// M_AXI_MEM_arlen                O     8
// M_AXI_MEM_arsize               O     3
// M_AXI_MEM_arburst              O     2
// M_AXI_MEM_arlock               O     1
// M_AXI_MEM_arcache              O     4
// M_AXI_MEM_arprot               O     3
// M_AXI_MEM_arqos                O     4
// M_AXI_MEM_arregion             O     4
// M_AXI_MEM_rready               O     1
// M_AXI_MEM_awvalid              O     1
// M_AXI_MEM_awaddr               O    32
// M_AXI_MEM_awlen                O     8
// M_AXI_MEM_awsize               O     3
// M_AXI_MEM_awburst              O     2
// M_AXI_MEM_awlock               O     1
// M_AXI_MEM_awcache              O     4
// M_AXI_MEM_awprot               O     3
// M_AXI_MEM_awqos                O     4
// M_AXI_MEM_awregion             O     4
// M_AXI_MEM_wvalid               O     1
// M_AXI_MEM_wdata                O   512
// M_AXI_MEM_wstrb                O    64
// M_AXI_MEM_wlast                O     1
// M_AXI_MEM_bready               O     1
// AXIS_NETWORK_RX_tready         O     1
// AXIS_NETWORK_TX_tvalid         O     1
// AXIS_NETWORK_TX_tdata          O   512
// AXIS_NETWORK_TX_tlast          O     1
// AXIS_NETWORK_TX_tkeep          O    64
// AXIS_NETWORK_TX_tDest          O     4
// aclk                           I     1 clock
// resetn                         I     1 reset
// S_AXI_CTRL_arvalid             I     1
// S_AXI_CTRL_araddr              I    12
// S_AXI_CTRL_arprot              I     3
// S_AXI_CTRL_rready              I     1
// S_AXI_CTRL_awvalid             I     1
// S_AXI_CTRL_awaddr              I    12
// S_AXI_CTRL_awprot              I     3
// S_AXI_CTRL_wvalid              I     1
// S_AXI_CTRL_wdata               I    64
// S_AXI_CTRL_wstrb               I     8
// S_AXI_CTRL_bready              I     1
// M_AXI_PCI_arready              I     1
// M_AXI_PCI_rvalid               I     1
// M_AXI_PCI_rdata                I   512 reg
// M_AXI_PCI_rresp                I     2 reg
// M_AXI_PCI_rlast                I     1 reg
// M_AXI_PCI_awready              I     1
// M_AXI_PCI_wready               I     1
// M_AXI_PCI_bvalid               I     1
// M_AXI_PCI_bresp                I     2 reg
// M_AXI_MEM_arready              I     1
// M_AXI_MEM_rvalid               I     1
// M_AXI_MEM_rdata                I   512 reg
// M_AXI_MEM_rresp                I     2 reg
// M_AXI_MEM_rlast                I     1 reg
// M_AXI_MEM_awready              I     1
// M_AXI_MEM_wready               I     1
// M_AXI_MEM_bvalid               I     1
// M_AXI_MEM_bresp                I     2 reg
// AXIS_NETWORK_RX_tvalid         I     1
// AXIS_NETWORK_RX_tdata          I   512 reg
// AXIS_NETWORK_RX_tkeep          I    64 reg
// AXIS_NETWORK_RX_tDest          I     4 reg
// AXIS_NETWORK_RX_tlast          I     1 reg
// AXIS_NETWORK_TX_tready         I     1
//
// Combinational paths from inputs to outputs:
//   S_AXI_CTRL_rready -> S_AXI_CTRL_arready
//
//

`ifdef BSV_ASSIGNMENT_DELAY
`else
  `define BSV_ASSIGNMENT_DELAY
`endif

`ifdef BSV_POSITIVE_RESET
  `define BSV_RESET_VALUE 1'b1
  `define BSV_RESET_EDGE posedge
`else
  `define BSV_RESET_VALUE 1'b0
  `define BSV_RESET_EDGE negedge
`endif

module mkNetworkPageDMA(aclk,
			resetn,

			intr_c2h,

			intr_h2c,

			S_AXI_CTRL_arready,

			S_AXI_CTRL_arvalid,

			S_AXI_CTRL_araddr,

			S_AXI_CTRL_arprot,

			S_AXI_CTRL_rvalid,

			S_AXI_CTRL_rready,

			S_AXI_CTRL_rdata,

			S_AXI_CTRL_rresp,

			S_AXI_CTRL_awready,

			S_AXI_CTRL_awvalid,

			S_AXI_CTRL_awaddr,

			S_AXI_CTRL_awprot,

			S_AXI_CTRL_wready,

			S_AXI_CTRL_wvalid,

			S_AXI_CTRL_wdata,

			S_AXI_CTRL_wstrb,

			S_AXI_CTRL_bvalid,

			S_AXI_CTRL_bready,

			S_AXI_CTRL_bresp,

			M_AXI_PCI_arvalid,

			M_AXI_PCI_arready,

			M_AXI_PCI_araddr,

			M_AXI_PCI_arlen,

			M_AXI_PCI_arsize,

			M_AXI_PCI_arburst,

			M_AXI_PCI_arlock,

			M_AXI_PCI_arcache,

			M_AXI_PCI_arprot,

			M_AXI_PCI_arqos,

			M_AXI_PCI_arregion,

			M_AXI_PCI_rready,

			M_AXI_PCI_rvalid,

			M_AXI_PCI_rdata,
			M_AXI_PCI_rresp,
			M_AXI_PCI_rlast,

			M_AXI_PCI_awready,

			M_AXI_PCI_awvalid,

			M_AXI_PCI_awaddr,

			M_AXI_PCI_awlen,

			M_AXI_PCI_awsize,

			M_AXI_PCI_awburst,

			M_AXI_PCI_awlock,

			M_AXI_PCI_awcache,

			M_AXI_PCI_awprot,

			M_AXI_PCI_awqos,

			M_AXI_PCI_awregion,

			M_AXI_PCI_wready,

			M_AXI_PCI_wvalid,

			M_AXI_PCI_wdata,

			M_AXI_PCI_wstrb,

			M_AXI_PCI_wlast,

			M_AXI_PCI_bvalid,

			M_AXI_PCI_bready,

			M_AXI_PCI_bresp,

			M_AXI_MEM_arvalid,

			M_AXI_MEM_arready,

			M_AXI_MEM_araddr,

			M_AXI_MEM_arlen,

			M_AXI_MEM_arsize,

			M_AXI_MEM_arburst,

			M_AXI_MEM_arlock,

			M_AXI_MEM_arcache,

			M_AXI_MEM_arprot,

			M_AXI_MEM_arqos,

			M_AXI_MEM_arregion,

			M_AXI_MEM_rready,

			M_AXI_MEM_rvalid,

			M_AXI_MEM_rdata,
			M_AXI_MEM_rresp,
			M_AXI_MEM_rlast,

			M_AXI_MEM_awready,

			M_AXI_MEM_awvalid,

			M_AXI_MEM_awaddr,

			M_AXI_MEM_awlen,

			M_AXI_MEM_awsize,

			M_AXI_MEM_awburst,

			M_AXI_MEM_awlock,

			M_AXI_MEM_awcache,

			M_AXI_MEM_awprot,

			M_AXI_MEM_awqos,

			M_AXI_MEM_awregion,

			M_AXI_MEM_wready,

			M_AXI_MEM_wvalid,

			M_AXI_MEM_wdata,

			M_AXI_MEM_wstrb,

			M_AXI_MEM_wlast,

			M_AXI_MEM_bvalid,

			M_AXI_MEM_bready,

			M_AXI_MEM_bresp,

			AXIS_NETWORK_RX_tready,

			AXIS_NETWORK_RX_tvalid,

			AXIS_NETWORK_RX_tdata,

			AXIS_NETWORK_RX_tkeep,

			AXIS_NETWORK_RX_tDest,

			AXIS_NETWORK_RX_tlast,

			AXIS_NETWORK_TX_tvalid,

			AXIS_NETWORK_TX_tready,

			AXIS_NETWORK_TX_tdata,

			AXIS_NETWORK_TX_tlast,

			AXIS_NETWORK_TX_tkeep,

			AXIS_NETWORK_TX_tDest);
  parameter [47 : 0] mac_addr = 48'b0;
  input  aclk;
  input  resetn;

  // value method intr_c2h
  output intr_c2h;

  // value method intr_h2c
  output intr_h2c;

  // value method s_axi_ctrl_rd_arready
  output S_AXI_CTRL_arready;

  // action method s_axi_ctrl_rd_parvalid
  input  S_AXI_CTRL_arvalid;

  // action method s_axi_ctrl_rd_paraddr
  input  [11 : 0] S_AXI_CTRL_araddr;

  // action method s_axi_ctrl_rd_parprot
  input  [2 : 0] S_AXI_CTRL_arprot;

  // value method s_axi_ctrl_rd_rvalid
  output S_AXI_CTRL_rvalid;

  // action method s_axi_ctrl_rd_prready
  input  S_AXI_CTRL_rready;

  // value method s_axi_ctrl_rd_rdata
  output [63 : 0] S_AXI_CTRL_rdata;

  // value method s_axi_ctrl_rd_rresp
  output [1 : 0] S_AXI_CTRL_rresp;

  // value method s_axi_ctrl_wr_awready
  output S_AXI_CTRL_awready;

  // action method s_axi_ctrl_wr_pawvalid
  input  S_AXI_CTRL_awvalid;

  // action method s_axi_ctrl_wr_pawaddr
  input  [11 : 0] S_AXI_CTRL_awaddr;

  // action method s_axi_ctrl_wr_pawprot
  input  [2 : 0] S_AXI_CTRL_awprot;

  // value method s_axi_ctrl_wr_wready
  output S_AXI_CTRL_wready;

  // action method s_axi_ctrl_wr_pwvalid
  input  S_AXI_CTRL_wvalid;

  // action method s_axi_ctrl_wr_pwdata
  input  [63 : 0] S_AXI_CTRL_wdata;

  // action method s_axi_ctrl_wr_pwstrb
  input  [7 : 0] S_AXI_CTRL_wstrb;

  // value method s_axi_ctrl_wr_bvalid
  output S_AXI_CTRL_bvalid;

  // action method s_axi_ctrl_wr_pbready
  input  S_AXI_CTRL_bready;

  // value method s_axi_ctrl_wr_bresp
  output [1 : 0] S_AXI_CTRL_bresp;

  // value method axi_pci_rd_arvalid
  output M_AXI_PCI_arvalid;

  // action method axi_pci_rd_parready
  input  M_AXI_PCI_arready;

  // value method axi_pci_rd_arid

  // value method axi_pci_rd_araddr
  output [63 : 0] M_AXI_PCI_araddr;

  // value method axi_pci_rd_arlen
  output [7 : 0] M_AXI_PCI_arlen;

  // value method axi_pci_rd_arsize
  output [2 : 0] M_AXI_PCI_arsize;

  // value method axi_pci_rd_arburst
  output [1 : 0] M_AXI_PCI_arburst;

  // value method axi_pci_rd_arlock
  output M_AXI_PCI_arlock;

  // value method axi_pci_rd_arcache
  output [3 : 0] M_AXI_PCI_arcache;

  // value method axi_pci_rd_arprot
  output [2 : 0] M_AXI_PCI_arprot;

  // value method axi_pci_rd_arqos
  output [3 : 0] M_AXI_PCI_arqos;

  // value method axi_pci_rd_arregion
  output [3 : 0] M_AXI_PCI_arregion;

  // value method axi_pci_rd_aruser

  // value method axi_pci_rd_rready
  output M_AXI_PCI_rready;

  // action method axi_pci_rd_prvalid
  input  M_AXI_PCI_rvalid;

  // action method axi_pci_rd_prchannel
  input  [511 : 0] M_AXI_PCI_rdata;
  input  [1 : 0] M_AXI_PCI_rresp;
  input  M_AXI_PCI_rlast;

  // action method axi_pci_wr_pawready
  input  M_AXI_PCI_awready;

  // value method axi_pci_wr_awvalid
  output M_AXI_PCI_awvalid;

  // value method axi_pci_wr_awid

  // value method axi_pci_wr_awaddr
  output [63 : 0] M_AXI_PCI_awaddr;

  // value method axi_pci_wr_awlen
  output [7 : 0] M_AXI_PCI_awlen;

  // value method axi_pci_wr_awsize
  output [2 : 0] M_AXI_PCI_awsize;

  // value method axi_pci_wr_awburst
  output [1 : 0] M_AXI_PCI_awburst;

  // value method axi_pci_wr_awlock
  output M_AXI_PCI_awlock;

  // value method axi_pci_wr_awcache
  output [3 : 0] M_AXI_PCI_awcache;

  // value method axi_pci_wr_awprot
  output [2 : 0] M_AXI_PCI_awprot;

  // value method axi_pci_wr_awqos
  output [3 : 0] M_AXI_PCI_awqos;

  // value method axi_pci_wr_awregion
  output [3 : 0] M_AXI_PCI_awregion;

  // value method axi_pci_wr_awuser

  // action method axi_pci_wr_pwready
  input  M_AXI_PCI_wready;

  // value method axi_pci_wr_wvalid
  output M_AXI_PCI_wvalid;

  // value method axi_pci_wr_wdata
  output [511 : 0] M_AXI_PCI_wdata;

  // value method axi_pci_wr_wstrb
  output [63 : 0] M_AXI_PCI_wstrb;

  // value method axi_pci_wr_wlast
  output M_AXI_PCI_wlast;

  // value method axi_pci_wr_wuser

  // action method axi_pci_wr_pbvalid
  input  M_AXI_PCI_bvalid;

  // value method axi_pci_wr_bready
  output M_AXI_PCI_bready;

  // action method axi_pci_wr_bin
  input  [1 : 0] M_AXI_PCI_bresp;

  // value method axi_mem_rd_arvalid
  output M_AXI_MEM_arvalid;

  // action method axi_mem_rd_parready
  input  M_AXI_MEM_arready;

  // value method axi_mem_rd_arid

  // value method axi_mem_rd_araddr
  output [31 : 0] M_AXI_MEM_araddr;

  // value method axi_mem_rd_arlen
  output [7 : 0] M_AXI_MEM_arlen;

  // value method axi_mem_rd_arsize
  output [2 : 0] M_AXI_MEM_arsize;

  // value method axi_mem_rd_arburst
  output [1 : 0] M_AXI_MEM_arburst;

  // value method axi_mem_rd_arlock
  output M_AXI_MEM_arlock;

  // value method axi_mem_rd_arcache
  output [3 : 0] M_AXI_MEM_arcache;

  // value method axi_mem_rd_arprot
  output [2 : 0] M_AXI_MEM_arprot;

  // value method axi_mem_rd_arqos
  output [3 : 0] M_AXI_MEM_arqos;

  // value method axi_mem_rd_arregion
  output [3 : 0] M_AXI_MEM_arregion;

  // value method axi_mem_rd_aruser

  // value method axi_mem_rd_rready
  output M_AXI_MEM_rready;

  // action method axi_mem_rd_prvalid
  input  M_AXI_MEM_rvalid;

  // action method axi_mem_rd_prchannel
  input  [511 : 0] M_AXI_MEM_rdata;
  input  [1 : 0] M_AXI_MEM_rresp;
  input  M_AXI_MEM_rlast;

  // action method axi_mem_wr_pawready
  input  M_AXI_MEM_awready;

  // value method axi_mem_wr_awvalid
  output M_AXI_MEM_awvalid;

  // value method axi_mem_wr_awid

  // value method axi_mem_wr_awaddr
  output [31 : 0] M_AXI_MEM_awaddr;

  // value method axi_mem_wr_awlen
  output [7 : 0] M_AXI_MEM_awlen;

  // value method axi_mem_wr_awsize
  output [2 : 0] M_AXI_MEM_awsize;

  // value method axi_mem_wr_awburst
  output [1 : 0] M_AXI_MEM_awburst;

  // value method axi_mem_wr_awlock
  output M_AXI_MEM_awlock;

  // value method axi_mem_wr_awcache
  output [3 : 0] M_AXI_MEM_awcache;

  // value method axi_mem_wr_awprot
  output [2 : 0] M_AXI_MEM_awprot;

  // value method axi_mem_wr_awqos
  output [3 : 0] M_AXI_MEM_awqos;

  // value method axi_mem_wr_awregion
  output [3 : 0] M_AXI_MEM_awregion;

  // value method axi_mem_wr_awuser

  // action method axi_mem_wr_pwready
  input  M_AXI_MEM_wready;

  // value method axi_mem_wr_wvalid
  output M_AXI_MEM_wvalid;

  // value method axi_mem_wr_wdata
  output [511 : 0] M_AXI_MEM_wdata;

  // value method axi_mem_wr_wstrb
  output [63 : 0] M_AXI_MEM_wstrb;

  // value method axi_mem_wr_wlast
  output M_AXI_MEM_wlast;

  // value method axi_mem_wr_wuser

  // action method axi_mem_wr_pbvalid
  input  M_AXI_MEM_bvalid;

  // value method axi_mem_wr_bready
  output M_AXI_MEM_bready;

  // action method axi_mem_wr_bin
  input  [1 : 0] M_AXI_MEM_bresp;

  // value method axis_rx_tready
  output AXIS_NETWORK_RX_tready;

  // action method axis_rx_ptvalid
  input  AXIS_NETWORK_RX_tvalid;

  // action method axis_rx_ptdata
  input  [511 : 0] AXIS_NETWORK_RX_tdata;

  // action method axis_rx_ptuser

  // action method axis_rx_ptkeep
  input  [63 : 0] AXIS_NETWORK_RX_tkeep;

  // action method axis_rx_ptDest
  input  [3 : 0] AXIS_NETWORK_RX_tDest;

  // action method axis_rx_ptlast
  input  AXIS_NETWORK_RX_tlast;

  // value method axis_tx_tvalid
  output AXIS_NETWORK_TX_tvalid;

  // action method axis_tx_ptready
  input  AXIS_NETWORK_TX_tready;

  // value method axis_tx_tdata
  output [511 : 0] AXIS_NETWORK_TX_tdata;

  // value method axis_tx_tlast
  output AXIS_NETWORK_TX_tlast;

  // value method axis_tx_tuser

  // value method axis_tx_tkeep
  output [63 : 0] AXIS_NETWORK_TX_tkeep;

  // value method axis_tx_tDest
  output [3 : 0] AXIS_NETWORK_TX_tDest;

  // signals for module outputs
  wire [511 : 0] AXIS_NETWORK_TX_tdata, M_AXI_MEM_wdata, M_AXI_PCI_wdata;
  wire [63 : 0] AXIS_NETWORK_TX_tkeep,
		M_AXI_MEM_wstrb,
		M_AXI_PCI_araddr,
		M_AXI_PCI_awaddr,
		M_AXI_PCI_wstrb,
		S_AXI_CTRL_rdata;
  wire [31 : 0] M_AXI_MEM_araddr, M_AXI_MEM_awaddr;
  wire [7 : 0] M_AXI_MEM_arlen,
	       M_AXI_MEM_awlen,
	       M_AXI_PCI_arlen,
	       M_AXI_PCI_awlen;
  wire [3 : 0] AXIS_NETWORK_TX_tDest,
	       M_AXI_MEM_arcache,
	       M_AXI_MEM_arqos,
	       M_AXI_MEM_arregion,
	       M_AXI_MEM_awcache,
	       M_AXI_MEM_awqos,
	       M_AXI_MEM_awregion,
	       M_AXI_PCI_arcache,
	       M_AXI_PCI_arqos,
	       M_AXI_PCI_arregion,
	       M_AXI_PCI_awcache,
	       M_AXI_PCI_awqos,
	       M_AXI_PCI_awregion;
  wire [2 : 0] M_AXI_MEM_arprot,
	       M_AXI_MEM_arsize,
	       M_AXI_MEM_awprot,
	       M_AXI_MEM_awsize,
	       M_AXI_PCI_arprot,
	       M_AXI_PCI_arsize,
	       M_AXI_PCI_awprot,
	       M_AXI_PCI_awsize;
  wire [1 : 0] M_AXI_MEM_arburst,
	       M_AXI_MEM_awburst,
	       M_AXI_PCI_arburst,
	       M_AXI_PCI_awburst,
	       S_AXI_CTRL_bresp,
	       S_AXI_CTRL_rresp;
  wire AXIS_NETWORK_RX_tready,
       AXIS_NETWORK_TX_tlast,
       AXIS_NETWORK_TX_tvalid,
       M_AXI_MEM_arlock,
       M_AXI_MEM_arvalid,
       M_AXI_MEM_awlock,
       M_AXI_MEM_awvalid,
       M_AXI_MEM_bready,
       M_AXI_MEM_rready,
       M_AXI_MEM_wlast,
       M_AXI_MEM_wvalid,
       M_AXI_PCI_arlock,
       M_AXI_PCI_arvalid,
       M_AXI_PCI_awlock,
       M_AXI_PCI_awvalid,
       M_AXI_PCI_bready,
       M_AXI_PCI_rready,
       M_AXI_PCI_wlast,
       M_AXI_PCI_wvalid,
       S_AXI_CTRL_arready,
       S_AXI_CTRL_awready,
       S_AXI_CTRL_bvalid,
       S_AXI_CTRL_rvalid,
       S_AXI_CTRL_wready,
       intr_c2h,
       intr_h2c;

  // inlined wires
  reg [581 : 0] parser_txOutFifo_rv$port1__write_1;
  reg [66 : 0] axiCtrl_readSlave_out_rv$port1__write_1;
  reg [3 : 0] c2h_axiRd_warcache$wget,
	      c2h_axiWr_wawcache$wget,
	      h2c_axiRd_warcache$wget,
	      h2c_axiWr_wawcache$wget;
  wire [581 : 0] parser_rxInFifo_rv$port1__read,
		 parser_rxInFifo_rv$port1__write_1,
		 parser_rxInFifo_rv$port2__read,
		 parser_txOutFifo_rv$port1__read,
		 parser_txOutFifo_rv$port2__read;
  wire [514 : 0] c2h_axiRd_rinpkg$wget, h2c_axiRd_rinpkg$wget;
  wire [512 : 0] c2h_dataFifo_rv$port1__read,
		 c2h_dataFifo_rv$port1__write_1,
		 c2h_dataFifo_rv$port2__read,
		 parser_rxOutFifo_rv$port1__read,
		 parser_rxOutFifo_rv$port1__write_1,
		 parser_rxOutFifo_rv$port2__read,
		 parser_txInFifo_rv$port1__read,
		 parser_txInFifo_rv$port1__write_1,
		 parser_txInFifo_rv$port2__read;
  wire [400 : 0] parser_rxBufFifo_rv$port1__read,
		 parser_rxBufFifo_rv$port1__write_1,
		 parser_rxBufFifo_rv$port2__read;
  wire [112 : 0] parser_txBufFifo_rv$port1__read,
		 parser_txBufFifo_rv$port1__write_1,
		 parser_txBufFifo_rv$port2__read;
  wire [87 : 0] axiCtrl_writeSlave_in_rv$port1__read,
		axiCtrl_writeSlave_in_rv$port1__write_1,
		axiCtrl_writeSlave_in_rv$port2__read;
  wire [72 : 0] axiCtrl_writeSlave_dataIn_rv$port0__write_1,
		axiCtrl_writeSlave_dataIn_rv$port1__read,
		axiCtrl_writeSlave_dataIn_rv$port2__read;
  wire [66 : 0] axiCtrl_readSlave_out_rv$port1__read,
		axiCtrl_readSlave_out_rv$port2__read;
  wire [15 : 0] axiCtrl_readSlave_in_rv$port1__read,
		axiCtrl_readSlave_in_rv$port1__write_1,
		axiCtrl_readSlave_in_rv$port2__read,
		axiCtrl_writeSlave_addrIn_rv$port0__write_1,
		axiCtrl_writeSlave_addrIn_rv$port1__read,
		axiCtrl_writeSlave_addrIn_rv$port2__read;
  wire [2 : 0] axiCtrl_writeSlave_out_rv$port1__read,
	       axiCtrl_writeSlave_out_rv$port2__read;
  wire axiCtrl_readIsHandled$whas,
       axiCtrl_readSlave_in_rv$EN_port0__write,
       axiCtrl_readSlave_in_rv$EN_port1__write,
       axiCtrl_readSlave_out_rv$EN_port0__write,
       axiCtrl_readSlave_out_rv$EN_port1__write,
       axiCtrl_writeIsHandled$whas,
       axiCtrl_writeSlave_addrIn_rv$EN_port0__write,
       axiCtrl_writeSlave_addrIn_rv$EN_port1__write,
       axiCtrl_writeSlave_dataIn_rv$EN_port0__write,
       axiCtrl_writeSlave_dataIn_rv$EN_port1__write,
       axiCtrl_writeSlave_in_rv$EN_port0__write,
       axiCtrl_writeSlave_in_rv$EN_port1__write,
       axiCtrl_writeSlave_out_rv$EN_port0__write,
       axiCtrl_writeSlave_out_rv$EN_port1__write,
       c2h_dataFifo_rv$EN_port1__write,
       c2h_readError$EN_port1__write,
       c2h_readError$port1__read,
       c2h_readError$port2__read,
       c2h_writeError$EN_port1__write,
       c2h_writeError$port1__read,
       c2h_writeError$port2__read,
       h2c_dataFifo_pwEnqueue$whas,
       h2c_readError$EN_port1__write,
       h2c_readError$port1__read,
       h2c_readError$port2__read,
       h2c_writeError$EN_port1__write,
       h2c_writeError$port1__read,
       h2c_writeError$port2__read,
       parser_rxBufFifo_rv$EN_port1__write,
       parser_rxBufWire$whas,
       parser_rxInFifo_rv$EN_port0__write,
       parser_rxInFifo_rv$EN_port1__write,
       parser_txBufFifo_rv$EN_port0__write,
       parser_txBufFifo_rv$EN_port1__write,
       parser_txBufWire$whas,
       parser_txInFifo_rv$EN_port0__write,
       parser_txInFifo_rv$EN_port1__write,
       parser_txOutFifo_rv$EN_port0__write,
       parser_txOutFifo_rv$EN_port1__write;

  // register axiCtrl_readBusy
  reg axiCtrl_readBusy;
  wire axiCtrl_readBusy$D_IN, axiCtrl_readBusy$EN;

  // register axiCtrl_readSlave_in_rv
  reg [15 : 0] axiCtrl_readSlave_in_rv;
  wire [15 : 0] axiCtrl_readSlave_in_rv$D_IN;
  wire axiCtrl_readSlave_in_rv$EN;

  // register axiCtrl_readSlave_isRst_isInReset
  reg axiCtrl_readSlave_isRst_isInReset;
  wire axiCtrl_readSlave_isRst_isInReset$D_IN,
       axiCtrl_readSlave_isRst_isInReset$EN;

  // register axiCtrl_readSlave_out_rv
  reg [66 : 0] axiCtrl_readSlave_out_rv;
  wire [66 : 0] axiCtrl_readSlave_out_rv$D_IN;
  wire axiCtrl_readSlave_out_rv$EN;

  // register axiCtrl_writeBusy
  reg axiCtrl_writeBusy;
  wire axiCtrl_writeBusy$D_IN, axiCtrl_writeBusy$EN;

  // register axiCtrl_writeSlave_addrIn_rv
  reg [15 : 0] axiCtrl_writeSlave_addrIn_rv;
  wire [15 : 0] axiCtrl_writeSlave_addrIn_rv$D_IN;
  wire axiCtrl_writeSlave_addrIn_rv$EN;

  // register axiCtrl_writeSlave_dataIn_rv
  reg [72 : 0] axiCtrl_writeSlave_dataIn_rv;
  wire [72 : 0] axiCtrl_writeSlave_dataIn_rv$D_IN;
  wire axiCtrl_writeSlave_dataIn_rv$EN;

  // register axiCtrl_writeSlave_in_rv
  reg [87 : 0] axiCtrl_writeSlave_in_rv;
  wire [87 : 0] axiCtrl_writeSlave_in_rv$D_IN;
  wire axiCtrl_writeSlave_in_rv$EN;

  // register axiCtrl_writeSlave_isRst_isInReset
  reg axiCtrl_writeSlave_isRst_isInReset;
  wire axiCtrl_writeSlave_isRst_isInReset$D_IN,
       axiCtrl_writeSlave_isRst_isInReset$EN;

  // register axiCtrl_writeSlave_out_rv
  reg [2 : 0] axiCtrl_writeSlave_out_rv;
  wire [2 : 0] axiCtrl_writeSlave_out_rv$D_IN;
  wire axiCtrl_writeSlave_out_rv$EN;

  // register c2hDstAddrReg
  reg [63 : 0] c2hDstAddrReg;
  wire [63 : 0] c2hDstAddrReg$D_IN;
  wire c2hDstAddrReg$EN;

  // register c2hIntrEnReg
  reg c2hIntrEnReg;
  wire c2hIntrEnReg$D_IN, c2hIntrEnReg$EN;

  // register c2hSrcAddrReg
  reg [31 : 0] c2hSrcAddrReg;
  wire [31 : 0] c2hSrcAddrReg$D_IN;
  wire c2hSrcAddrReg$EN;

  // register c2hStatus
  reg c2hStatus;
  wire c2hStatus$D_IN, c2hStatus$EN;

  // register c2h_axiRd_isRst_isInReset
  reg c2h_axiRd_isRst_isInReset;
  wire c2h_axiRd_isRst_isInReset$D_IN, c2h_axiRd_isRst_isInReset$EN;

  // register c2h_axiWr_isRst_isInReset
  reg c2h_axiWr_isRst_isInReset;
  wire c2h_axiWr_isRst_isInReset$D_IN, c2h_axiWr_isRst_isInReset$EN;

  // register c2h_axisTX_isRst_isInReset
  reg c2h_axisTX_isRst_isInReset;
  wire c2h_axisTX_isRst_isInReset$D_IN, c2h_axisTX_isRst_isInReset$EN;

  // register c2h_dataCnt
  reg [6 : 0] c2h_dataCnt;
  wire [6 : 0] c2h_dataCnt$D_IN;
  wire c2h_dataCnt$EN;

  // register c2h_dataFifo_rv
  reg [512 : 0] c2h_dataFifo_rv;
  wire [512 : 0] c2h_dataFifo_rv$D_IN;
  wire c2h_dataFifo_rv$EN;

  // register c2h_pageCnt
  reg [12 : 0] c2h_pageCnt;
  wire [12 : 0] c2h_pageCnt$D_IN;
  wire c2h_pageCnt$EN;

  // register c2h_readError
  reg c2h_readError;
  wire c2h_readError$D_IN, c2h_readError$EN;

  // register c2h_writeError
  reg c2h_writeError;
  wire c2h_writeError$D_IN, c2h_writeError$EN;

  // register dstMac
  reg [47 : 0] dstMac;
  wire [47 : 0] dstMac$D_IN;
  wire dstMac$EN;

  // register h2cDstAddrReg
  reg [31 : 0] h2cDstAddrReg;
  wire [31 : 0] h2cDstAddrReg$D_IN;
  wire h2cDstAddrReg$EN;

  // register h2cIntrEnReg
  reg h2cIntrEnReg;
  wire h2cIntrEnReg$D_IN, h2cIntrEnReg$EN;

  // register h2cSrcAddrReg
  reg [63 : 0] h2cSrcAddrReg;
  wire [63 : 0] h2cSrcAddrReg$D_IN;
  wire h2cSrcAddrReg$EN;

  // register h2cStatus
  reg h2cStatus;
  wire h2cStatus$D_IN, h2cStatus$EN;

  // register h2c_axiRd_isRst_isInReset
  reg h2c_axiRd_isRst_isInReset;
  wire h2c_axiRd_isRst_isInReset$D_IN, h2c_axiRd_isRst_isInReset$EN;

  // register h2c_axiWr_isRst_isInReset
  reg h2c_axiWr_isRst_isInReset;
  wire h2c_axiWr_isRst_isInReset$D_IN, h2c_axiWr_isRst_isInReset$EN;

  // register h2c_axisRx_isRst_isInReset
  reg h2c_axisRx_isRst_isInReset;
  wire h2c_axisRx_isRst_isInReset$D_IN, h2c_axisRx_isRst_isInReset$EN;

  // register h2c_dataCnt
  reg [6 : 0] h2c_dataCnt;
  wire [6 : 0] h2c_dataCnt$D_IN;
  wire h2c_dataCnt$EN;

  // register h2c_dataFifo_rCache
  reg [522 : 0] h2c_dataFifo_rCache;
  wire [522 : 0] h2c_dataFifo_rCache$D_IN;
  wire h2c_dataFifo_rCache$EN;

  // register h2c_dataFifo_rRdPtr
  reg [9 : 0] h2c_dataFifo_rRdPtr;
  wire [9 : 0] h2c_dataFifo_rRdPtr$D_IN;
  wire h2c_dataFifo_rRdPtr$EN;

  // register h2c_dataFifo_rWrPtr
  reg [9 : 0] h2c_dataFifo_rWrPtr;
  wire [9 : 0] h2c_dataFifo_rWrPtr$D_IN;
  wire h2c_dataFifo_rWrPtr$EN;

  // register h2c_pageCnt
  reg [12 : 0] h2c_pageCnt;
  wire [12 : 0] h2c_pageCnt$D_IN;
  wire h2c_pageCnt$EN;

  // register h2c_readError
  reg h2c_readError;
  wire h2c_readError$D_IN, h2c_readError$EN;

  // register h2c_recCnt
  reg [5 : 0] h2c_recCnt;
  wire [5 : 0] h2c_recCnt$D_IN;
  wire h2c_recCnt$EN;

  // register h2c_writeError
  reg h2c_writeError;
  wire h2c_writeError$D_IN, h2c_writeError$EN;

  // register parser_recState
  reg [1 : 0] parser_recState;
  wire [1 : 0] parser_recState$D_IN;
  wire parser_recState$EN;

  // register parser_rxBufFifo_rv
  reg [400 : 0] parser_rxBufFifo_rv;
  wire [400 : 0] parser_rxBufFifo_rv$D_IN;
  wire parser_rxBufFifo_rv$EN;

  // register parser_rxInFifo_rv
  reg [581 : 0] parser_rxInFifo_rv;
  wire [581 : 0] parser_rxInFifo_rv$D_IN;
  wire parser_rxInFifo_rv$EN;

  // register parser_rxOutFifo_rv
  reg [512 : 0] parser_rxOutFifo_rv;
  wire [512 : 0] parser_rxOutFifo_rv$D_IN;
  wire parser_rxOutFifo_rv$EN;

  // register parser_txBufFifo_rv
  reg [112 : 0] parser_txBufFifo_rv;
  wire [112 : 0] parser_txBufFifo_rv$D_IN;
  wire parser_txBufFifo_rv$EN;

  // register parser_txCnt
  reg [4 : 0] parser_txCnt;
  reg [4 : 0] parser_txCnt$D_IN;
  wire parser_txCnt$EN;

  // register parser_txInFifo_rv
  reg [512 : 0] parser_txInFifo_rv;
  wire [512 : 0] parser_txInFifo_rv$D_IN;
  wire parser_txInFifo_rv$EN;

  // register parser_txOutFifo_rv
  reg [581 : 0] parser_txOutFifo_rv;
  wire [581 : 0] parser_txOutFifo_rv$D_IN;
  wire parser_txOutFifo_rv$EN;

  // ports of submodule c2h_activeWriteFifo
  wire [1 : 0] c2h_activeWriteFifo$D_IN, c2h_activeWriteFifo$D_OUT;
  wire c2h_activeWriteFifo$CLR,
       c2h_activeWriteFifo$DEQ,
       c2h_activeWriteFifo$EMPTY_N,
       c2h_activeWriteFifo$ENQ,
       c2h_activeWriteFifo$FULL_N;

  // ports of submodule c2h_axiRd_in
  wire [60 : 0] c2h_axiRd_in$D_IN, c2h_axiRd_in$D_OUT;
  wire c2h_axiRd_in$CLR,
       c2h_axiRd_in$DEQ,
       c2h_axiRd_in$EMPTY_N,
       c2h_axiRd_in$ENQ,
       c2h_axiRd_in$FULL_N;

  // ports of submodule c2h_axiRd_out
  wire [514 : 0] c2h_axiRd_out$D_IN, c2h_axiRd_out$D_OUT;
  wire c2h_axiRd_out$CLR,
       c2h_axiRd_out$DEQ,
       c2h_axiRd_out$EMPTY_N,
       c2h_axiRd_out$ENQ,
       c2h_axiRd_out$FULL_N;

  // ports of submodule c2h_axiWr_in_addr
  wire [92 : 0] c2h_axiWr_in_addr$D_IN, c2h_axiWr_in_addr$D_OUT;
  wire c2h_axiWr_in_addr$CLR,
       c2h_axiWr_in_addr$DEQ,
       c2h_axiWr_in_addr$EMPTY_N,
       c2h_axiWr_in_addr$ENQ,
       c2h_axiWr_in_addr$FULL_N;

  // ports of submodule c2h_axiWr_in_data
  wire [576 : 0] c2h_axiWr_in_data$D_IN, c2h_axiWr_in_data$D_OUT;
  wire c2h_axiWr_in_data$CLR,
       c2h_axiWr_in_data$DEQ,
       c2h_axiWr_in_data$EMPTY_N,
       c2h_axiWr_in_data$ENQ,
       c2h_axiWr_in_data$FULL_N;

  // ports of submodule c2h_axiWr_out
  wire [1 : 0] c2h_axiWr_out$D_IN, c2h_axiWr_out$D_OUT;
  wire c2h_axiWr_out$CLR,
       c2h_axiWr_out$DEQ,
       c2h_axiWr_out$EMPTY_N,
       c2h_axiWr_out$ENQ,
       c2h_axiWr_out$FULL_N;

  // ports of submodule c2h_axisTX_out
  wire [580 : 0] c2h_axisTX_out$D_IN;
  wire c2h_axisTX_out$CLR, c2h_axisTX_out$DEQ, c2h_axisTX_out$ENQ;

  // ports of submodule c2h_axisTX_out_1
  wire [580 : 0] c2h_axisTX_out_1$D_IN, c2h_axisTX_out_1$D_OUT;
  wire c2h_axisTX_out_1$CLR,
       c2h_axisTX_out_1$DEQ,
       c2h_axisTX_out_1$EMPTY_N,
       c2h_axisTX_out_1$ENQ,
       c2h_axisTX_out_1$FULL_N;

  // ports of submodule c2h_nextCmdFifo
  wire [86 : 0] c2h_nextCmdFifo$D_IN, c2h_nextCmdFifo$D_OUT;
  wire c2h_nextCmdFifo$CLR,
       c2h_nextCmdFifo$DEQ,
       c2h_nextCmdFifo$EMPTY_N,
       c2h_nextCmdFifo$ENQ,
       c2h_nextCmdFifo$FULL_N;

  // ports of submodule c2h_nextRspFifo
  wire c2h_nextRspFifo$CLR,
       c2h_nextRspFifo$DEQ,
       c2h_nextRspFifo$EMPTY_N,
       c2h_nextRspFifo$ENQ,
       c2h_nextRspFifo$FULL_N;

  // ports of submodule c2h_nextWriteFifo
  wire [53 : 0] c2h_nextWriteFifo$D_IN, c2h_nextWriteFifo$D_OUT;
  wire c2h_nextWriteFifo$CLR,
       c2h_nextWriteFifo$DEQ,
       c2h_nextWriteFifo$EMPTY_N,
       c2h_nextWriteFifo$ENQ,
       c2h_nextWriteFifo$FULL_N;

  // ports of submodule h2c_activeWriteFifo
  wire h2c_activeWriteFifo$CLR,
       h2c_activeWriteFifo$DEQ,
       h2c_activeWriteFifo$D_IN,
       h2c_activeWriteFifo$D_OUT,
       h2c_activeWriteFifo$EMPTY_N,
       h2c_activeWriteFifo$ENQ,
       h2c_activeWriteFifo$FULL_N;

  // ports of submodule h2c_axiRd_in
  wire [92 : 0] h2c_axiRd_in$D_IN, h2c_axiRd_in$D_OUT;
  wire h2c_axiRd_in$CLR,
       h2c_axiRd_in$DEQ,
       h2c_axiRd_in$EMPTY_N,
       h2c_axiRd_in$ENQ,
       h2c_axiRd_in$FULL_N;

  // ports of submodule h2c_axiRd_out
  wire [514 : 0] h2c_axiRd_out$D_IN, h2c_axiRd_out$D_OUT;
  wire h2c_axiRd_out$CLR,
       h2c_axiRd_out$DEQ,
       h2c_axiRd_out$EMPTY_N,
       h2c_axiRd_out$ENQ,
       h2c_axiRd_out$FULL_N;

  // ports of submodule h2c_axiWr_in_addr
  wire [60 : 0] h2c_axiWr_in_addr$D_IN, h2c_axiWr_in_addr$D_OUT;
  wire h2c_axiWr_in_addr$CLR,
       h2c_axiWr_in_addr$DEQ,
       h2c_axiWr_in_addr$EMPTY_N,
       h2c_axiWr_in_addr$ENQ,
       h2c_axiWr_in_addr$FULL_N;

  // ports of submodule h2c_axiWr_in_data
  wire [576 : 0] h2c_axiWr_in_data$D_IN, h2c_axiWr_in_data$D_OUT;
  wire h2c_axiWr_in_data$CLR,
       h2c_axiWr_in_data$DEQ,
       h2c_axiWr_in_data$EMPTY_N,
       h2c_axiWr_in_data$ENQ,
       h2c_axiWr_in_data$FULL_N;

  // ports of submodule h2c_axiWr_out
  wire [1 : 0] h2c_axiWr_out$D_IN, h2c_axiWr_out$D_OUT;
  wire h2c_axiWr_out$CLR,
       h2c_axiWr_out$DEQ,
       h2c_axiWr_out$EMPTY_N,
       h2c_axiWr_out$ENQ,
       h2c_axiWr_out$FULL_N;

  // ports of submodule h2c_axisRx_in
  wire [580 : 0] h2c_axisRx_in$D_IN;
  wire h2c_axisRx_in$CLR, h2c_axisRx_in$DEQ, h2c_axisRx_in$ENQ;

  // ports of submodule h2c_axisRx_in_1
  wire [580 : 0] h2c_axisRx_in_1$D_IN, h2c_axisRx_in_1$D_OUT;
  wire h2c_axisRx_in_1$CLR,
       h2c_axisRx_in_1$DEQ,
       h2c_axisRx_in_1$EMPTY_N,
       h2c_axisRx_in_1$ENQ,
       h2c_axisRx_in_1$FULL_N;

  // ports of submodule h2c_dataFifo_memory
  wire [511 : 0] h2c_dataFifo_memory$DIA,
		 h2c_dataFifo_memory$DIB,
		 h2c_dataFifo_memory$DOB;
  wire [8 : 0] h2c_dataFifo_memory$ADDRA, h2c_dataFifo_memory$ADDRB;
  wire h2c_dataFifo_memory$ENA,
       h2c_dataFifo_memory$ENB,
       h2c_dataFifo_memory$WEA,
       h2c_dataFifo_memory$WEB;

  // ports of submodule h2c_isNetworkTransferFifo
  wire h2c_isNetworkTransferFifo$CLR,
       h2c_isNetworkTransferFifo$DEQ,
       h2c_isNetworkTransferFifo$D_IN,
       h2c_isNetworkTransferFifo$D_OUT,
       h2c_isNetworkTransferFifo$EMPTY_N,
       h2c_isNetworkTransferFifo$ENQ,
       h2c_isNetworkTransferFifo$FULL_N;

  // ports of submodule h2c_nextCmdFifo
  wire [86 : 0] h2c_nextCmdFifo$D_IN, h2c_nextCmdFifo$D_OUT;
  wire h2c_nextCmdFifo$CLR,
       h2c_nextCmdFifo$DEQ,
       h2c_nextCmdFifo$EMPTY_N,
       h2c_nextCmdFifo$ENQ,
       h2c_nextCmdFifo$FULL_N;

  // ports of submodule h2c_nextRspFifo
  wire h2c_nextRspFifo$CLR,
       h2c_nextRspFifo$DEQ,
       h2c_nextRspFifo$EMPTY_N,
       h2c_nextRspFifo$ENQ,
       h2c_nextRspFifo$FULL_N;

  // ports of submodule h2c_nextWriteFifo
  wire [21 : 0] h2c_nextWriteFifo$D_IN, h2c_nextWriteFifo$D_OUT;
  wire h2c_nextWriteFifo$CLR,
       h2c_nextWriteFifo$DEQ,
       h2c_nextWriteFifo$EMPTY_N,
       h2c_nextWriteFifo$ENQ,
       h2c_nextWriteFifo$FULL_N;

  // rule scheduling signals
  wire WILL_FIRE_RL_axiCtrl_1_axiWriteFallback,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7,
       WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8,
       WILL_FIRE_RL_axiCtrl_axiReadFallback,
       WILL_FIRE_RL_axiCtrl_axiReadSpecial,
       WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled,
       WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_1,
       WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_2,
       WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_3,
       WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_4,
       WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_5,
       WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_6,
       WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7,
       WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8,
       WILL_FIRE_RL_axiCtrl_axiReadSpecial_1,
       WILL_FIRE_RL_axiCtrl_axiReadSpecial_2,
       WILL_FIRE_RL_axiCtrl_axiReadSpecial_3,
       WILL_FIRE_RL_axiCtrl_axiReadSpecial_4,
       WILL_FIRE_RL_axiCtrl_axiReadSpecial_5,
       WILL_FIRE_RL_axiCtrl_axiReadSpecial_6,
       WILL_FIRE_RL_axiCtrl_axiReadSpecial_7,
       WILL_FIRE_RL_axiCtrl_axiReadSpecial_8,
       WILL_FIRE_RL_c2h_forwardData,
       WILL_FIRE_RL_c2h_genZeroData,
       WILL_FIRE_RL_c2h_issueRead,
       WILL_FIRE_RL_c2h_issueWrite,
       WILL_FIRE_RL_h2c_bufferReadDataFromHost,
       WILL_FIRE_RL_h2c_bufferReadDataFromNetwork,
       WILL_FIRE_RL_h2c_forwardData,
       WILL_FIRE_RL_h2c_genZeroData,
       WILL_FIRE_RL_h2c_issueRead,
       WILL_FIRE_RL_h2c_issueWrite,
       WILL_FIRE_RL_parser_discardIncomingPacket,
       WILL_FIRE_RL_parser_forwardIncomingPacket,
       WILL_FIRE_RL_parser_receiveFirstPacket,
       WILL_FIRE_RL_parser_sendFirstPacket,
       WILL_FIRE_RL_parser_sendLastPacket,
       WILL_FIRE_RL_parser_sendRegularPacket;

  // inputs to muxes for submodule ports
  wire [581 : 0] MUX_parser_txOutFifo_rv$port1__write_1__VAL_1,
		 MUX_parser_txOutFifo_rv$port1__write_1__VAL_2,
		 MUX_parser_txOutFifo_rv$port1__write_1__VAL_3;
  wire [576 : 0] MUX_c2h_axiWr_in_data$enq_1__VAL_1,
		 MUX_c2h_axiWr_in_data$enq_1__VAL_2,
		 MUX_h2c_axiWr_in_data$enq_1__VAL_1,
		 MUX_h2c_axiWr_in_data$enq_1__VAL_2;
  wire [512 : 0] MUX_parser_txInFifo_rv$port1__write_1__VAL_1;
  wire [511 : 0] MUX_h2c_dataFifo_wDataIn$wset_1__VAL_2;
  wire [66 : 0] MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_1,
		MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_2,
		MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_3,
		MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_4,
		MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_5,
		MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_6,
		MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_7,
		MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_8;
  wire [4 : 0] MUX_parser_txCnt$write_1__VAL_1;
  wire [1 : 0] MUX_parser_recState$write_1__VAL_2;
  wire MUX_c2hStatus$write_1__SEL_1,
       MUX_c2h_axiWr_in_data$enq_1__SEL_1,
       MUX_h2cStatus$write_1__SEL_1,
       MUX_parser_recState$write_1__PSEL_1,
       MUX_parser_recState$write_1__SEL_1,
       MUX_parser_txInFifo_rv$port1__write_1__SEL_1;

  // remaining internal signals
  reg [3 : 0] CASE_c2h_axiRd_warcachewget_1_c2h_axiRd_warca_ETC__q2,
	      CASE_c2h_axiWr_wawcachewget_1_c2h_axiWr_wawca_ETC__q3,
	      CASE_h2c_axiRd_warcachewget_1_h2c_axiRd_warca_ETC__q4,
	      CASE_h2c_axiWr_wawcachewget_1_h2c_axiWr_wawca_ETC__q5;
  wire [511 : 0] out__h3630,
		 out__h6189,
		 out__h6417,
		 x3__h19464,
		 x_data__h21102,
		 x_wget__h19250;
  wire [63 : 0] IF_c2h_nextCmdFifo_notEmpty__06_OR_c2h_nextWri_ETC___d613,
		IF_h2c_nextCmdFifo_notEmpty__53_OR_h2c_nextWri_ETC___d660,
		v__h27206,
		v__h27700,
		v__h28010,
		v__h28611,
		v__h28916,
		v__h29069,
		x_addr__h12961,
		x_addr__h20215;
  wire [51 : 0] pfn__h20266, x_dstPfn__h12537;
  wire [47 : 0] header_dstMac__h1000, x__h4105, x__h5048;
  wire [31 : 0] x_addr__h12431, x_addr__h20953;
  wire [19 : 0] pfn__h12482, x_dstPfn__h20321;
  wire [15 : 0] header_pktLen__h998;
  wire [12 : 0] IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d808,
		c2h_pageCnt_24_PLUS_1___d234,
		h2c_pageCnt_52_PLUS_1___d462;
  wire [9 : 0] x__h19533, x__h19622;
  wire [7 : 0] IF_axiCtrl_writeSlave_in_rv_BIT_4_THEN_axiCtrl_ETC__q1,
	       IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801;
  wire [1 : 0] v__h27215, v__h28019;
  wire NOT_c2h_nextCmdFifo_notEmpty__06_24_AND_NOT_c2_ETC___d630,
       NOT_h2c_dataFifo_rRdPtr_read__24_EQ_h2c_dataFi_ETC___d500,
       NOT_h2c_dataFifo_rRdPtr_read__24_PLUS_256_66_E_ETC___d468,
       NOT_h2c_nextCmdFifo_notEmpty__53_71_AND_NOT_h2_ETC___d677,
       _dor1c2h_activeWriteFifo$EN_deq,
       _dor1c2h_nextRspFifo$EN_enq,
       _dor1h2c_activeWriteFifo$EN_deq,
       _dor1h2c_nextRspFifo$EN_enq,
       c2h_activeWriteFifo_i_notEmpty__67_AND_NOT_par_ETC___d275,
       c2h_pageCnt_24_PLUS_1_34_EQ_c2h_nextCmdFifo_fi_ETC___d236,
       h2c_pageCnt_52_PLUS_1_62_EQ_h2c_nextCmdFifo_fi_ETC___d464,
       parser_rxInFifo_rv_port0__read_BITS_18_TO_5_EQ_ETC___d24;

  // value method intr_c2h
  assign intr_c2h =
	     c2hIntrEnReg && c2hStatus &&
	     NOT_c2h_nextCmdFifo_notEmpty__06_24_AND_NOT_c2_ETC___d630 ;

  // value method intr_h2c
  assign intr_h2c =
	     h2cIntrEnReg && h2cStatus &&
	     NOT_h2c_nextCmdFifo_notEmpty__53_71_AND_NOT_h2_ETC___d677 ;

  // value method s_axi_ctrl_rd_arready
  assign S_AXI_CTRL_arready =
	     !axiCtrl_readSlave_isRst_isInReset &&
	     !axiCtrl_readSlave_in_rv$port1__read[15] ;

  // value method s_axi_ctrl_rd_rvalid
  assign S_AXI_CTRL_rvalid =
	     !axiCtrl_readSlave_isRst_isInReset &&
	     axiCtrl_readSlave_out_rv[66] ;

  // value method s_axi_ctrl_rd_rdata
  assign S_AXI_CTRL_rdata =
	     axiCtrl_readSlave_out_rv[66] ?
	       axiCtrl_readSlave_out_rv[65:2] :
	       64'd0 ;

  // value method s_axi_ctrl_rd_rresp
  assign S_AXI_CTRL_rresp =
	     axiCtrl_readSlave_out_rv[66] ?
	       axiCtrl_readSlave_out_rv[1:0] :
	       2'd0 ;

  // value method s_axi_ctrl_wr_awready
  assign S_AXI_CTRL_awready =
	     !axiCtrl_writeSlave_isRst_isInReset &&
	     !axiCtrl_writeSlave_addrIn_rv[15] ;

  // value method s_axi_ctrl_wr_wready
  assign S_AXI_CTRL_wready =
	     !axiCtrl_writeSlave_isRst_isInReset &&
	     !axiCtrl_writeSlave_dataIn_rv[72] ;

  // value method s_axi_ctrl_wr_bvalid
  assign S_AXI_CTRL_bvalid =
	     !axiCtrl_writeSlave_isRst_isInReset &&
	     axiCtrl_writeSlave_out_rv[2] ;

  // value method s_axi_ctrl_wr_bresp
  assign S_AXI_CTRL_bresp =
	     axiCtrl_writeSlave_out_rv[2] ?
	       axiCtrl_writeSlave_out_rv[1:0] :
	       2'd0 ;

  // value method axi_pci_rd_arvalid
  assign M_AXI_PCI_arvalid =
	     !h2c_axiRd_isRst_isInReset && h2c_axiRd_in$EMPTY_N ;

  // value method axi_pci_rd_araddr
  assign M_AXI_PCI_araddr =
	     h2c_axiRd_in$EMPTY_N ? h2c_axiRd_in$D_OUT[92:29] : 64'd0 ;

  // value method axi_pci_rd_arlen
  assign M_AXI_PCI_arlen =
	     h2c_axiRd_in$EMPTY_N ? h2c_axiRd_in$D_OUT[28:21] : 8'd0 ;

  // value method axi_pci_rd_arsize
  assign M_AXI_PCI_arsize =
	     h2c_axiRd_in$EMPTY_N ? h2c_axiRd_in$D_OUT[20:18] : 3'd0 ;

  // value method axi_pci_rd_arburst
  assign M_AXI_PCI_arburst =
	     h2c_axiRd_in$EMPTY_N ? h2c_axiRd_in$D_OUT[17:16] : 2'd0 ;

  // value method axi_pci_rd_arlock
  assign M_AXI_PCI_arlock = h2c_axiRd_in$EMPTY_N && h2c_axiRd_in$D_OUT[15] ;

  // value method axi_pci_rd_arcache
  assign M_AXI_PCI_arcache =
	     (!h2c_axiRd_in$EMPTY_N || h2c_axiRd_warcache$wget == 4'd0) ?
	       4'd0 :
	       CASE_h2c_axiRd_warcachewget_1_h2c_axiRd_warca_ETC__q4 ;

  // value method axi_pci_rd_arprot
  assign M_AXI_PCI_arprot =
	     h2c_axiRd_in$EMPTY_N ? h2c_axiRd_in$D_OUT[10:8] : 3'd0 ;

  // value method axi_pci_rd_arqos
  assign M_AXI_PCI_arqos =
	     h2c_axiRd_in$EMPTY_N ? h2c_axiRd_in$D_OUT[7:4] : 4'd0 ;

  // value method axi_pci_rd_arregion
  assign M_AXI_PCI_arregion =
	     h2c_axiRd_in$EMPTY_N ? h2c_axiRd_in$D_OUT[3:0] : 4'd0 ;

  // value method axi_pci_rd_rready
  assign M_AXI_PCI_rready =
	     !h2c_axiRd_isRst_isInReset && h2c_axiRd_out$FULL_N ;

  // value method axi_pci_wr_awvalid
  assign M_AXI_PCI_awvalid =
	     !c2h_axiWr_isRst_isInReset && c2h_axiWr_in_addr$EMPTY_N ;

  // value method axi_pci_wr_awaddr
  assign M_AXI_PCI_awaddr =
	     c2h_axiWr_in_addr$EMPTY_N ?
	       c2h_axiWr_in_addr$D_OUT[92:29] :
	       64'd0 ;

  // value method axi_pci_wr_awlen
  assign M_AXI_PCI_awlen =
	     c2h_axiWr_in_addr$EMPTY_N ?
	       c2h_axiWr_in_addr$D_OUT[28:21] :
	       8'd0 ;

  // value method axi_pci_wr_awsize
  assign M_AXI_PCI_awsize =
	     c2h_axiWr_in_addr$EMPTY_N ?
	       c2h_axiWr_in_addr$D_OUT[20:18] :
	       3'd0 ;

  // value method axi_pci_wr_awburst
  assign M_AXI_PCI_awburst =
	     c2h_axiWr_in_addr$EMPTY_N ?
	       c2h_axiWr_in_addr$D_OUT[17:16] :
	       2'd0 ;

  // value method axi_pci_wr_awlock
  assign M_AXI_PCI_awlock =
	     c2h_axiWr_in_addr$EMPTY_N && c2h_axiWr_in_addr$D_OUT[15] ;

  // value method axi_pci_wr_awcache
  assign M_AXI_PCI_awcache =
	     (!c2h_axiWr_in_addr$EMPTY_N || c2h_axiWr_wawcache$wget == 4'd0) ?
	       4'd0 :
	       CASE_c2h_axiWr_wawcachewget_1_c2h_axiWr_wawca_ETC__q3 ;

  // value method axi_pci_wr_awprot
  assign M_AXI_PCI_awprot =
	     c2h_axiWr_in_addr$EMPTY_N ?
	       c2h_axiWr_in_addr$D_OUT[10:8] :
	       3'd0 ;

  // value method axi_pci_wr_awqos
  assign M_AXI_PCI_awqos =
	     c2h_axiWr_in_addr$EMPTY_N ? c2h_axiWr_in_addr$D_OUT[7:4] : 4'd0 ;

  // value method axi_pci_wr_awregion
  assign M_AXI_PCI_awregion =
	     c2h_axiWr_in_addr$EMPTY_N ? c2h_axiWr_in_addr$D_OUT[3:0] : 4'd0 ;

  // value method axi_pci_wr_wvalid
  assign M_AXI_PCI_wvalid =
	     !c2h_axiWr_isRst_isInReset && c2h_axiWr_in_data$EMPTY_N ;

  // value method axi_pci_wr_wdata
  assign M_AXI_PCI_wdata =
	     c2h_axiWr_in_data$EMPTY_N ?
	       c2h_axiWr_in_data$D_OUT[576:65] :
	       512'd0 ;

  // value method axi_pci_wr_wstrb
  assign M_AXI_PCI_wstrb =
	     c2h_axiWr_in_data$EMPTY_N ?
	       c2h_axiWr_in_data$D_OUT[64:1] :
	       64'd0 ;

  // value method axi_pci_wr_wlast
  assign M_AXI_PCI_wlast =
	     c2h_axiWr_in_data$EMPTY_N && c2h_axiWr_in_data$D_OUT[0] ;

  // value method axi_pci_wr_bready
  assign M_AXI_PCI_bready =
	     !c2h_axiWr_isRst_isInReset && c2h_axiWr_out$FULL_N ;

  // value method axi_mem_rd_arvalid
  assign M_AXI_MEM_arvalid =
	     !c2h_axiRd_isRst_isInReset && c2h_axiRd_in$EMPTY_N ;

  // value method axi_mem_rd_araddr
  assign M_AXI_MEM_araddr =
	     c2h_axiRd_in$EMPTY_N ? c2h_axiRd_in$D_OUT[60:29] : 32'd0 ;

  // value method axi_mem_rd_arlen
  assign M_AXI_MEM_arlen =
	     c2h_axiRd_in$EMPTY_N ? c2h_axiRd_in$D_OUT[28:21] : 8'd0 ;

  // value method axi_mem_rd_arsize
  assign M_AXI_MEM_arsize =
	     c2h_axiRd_in$EMPTY_N ? c2h_axiRd_in$D_OUT[20:18] : 3'd0 ;

  // value method axi_mem_rd_arburst
  assign M_AXI_MEM_arburst =
	     c2h_axiRd_in$EMPTY_N ? c2h_axiRd_in$D_OUT[17:16] : 2'd0 ;

  // value method axi_mem_rd_arlock
  assign M_AXI_MEM_arlock = c2h_axiRd_in$EMPTY_N && c2h_axiRd_in$D_OUT[15] ;

  // value method axi_mem_rd_arcache
  assign M_AXI_MEM_arcache =
	     (!c2h_axiRd_in$EMPTY_N || c2h_axiRd_warcache$wget == 4'd0) ?
	       4'd0 :
	       CASE_c2h_axiRd_warcachewget_1_c2h_axiRd_warca_ETC__q2 ;

  // value method axi_mem_rd_arprot
  assign M_AXI_MEM_arprot =
	     c2h_axiRd_in$EMPTY_N ? c2h_axiRd_in$D_OUT[10:8] : 3'd0 ;

  // value method axi_mem_rd_arqos
  assign M_AXI_MEM_arqos =
	     c2h_axiRd_in$EMPTY_N ? c2h_axiRd_in$D_OUT[7:4] : 4'd0 ;

  // value method axi_mem_rd_arregion
  assign M_AXI_MEM_arregion =
	     c2h_axiRd_in$EMPTY_N ? c2h_axiRd_in$D_OUT[3:0] : 4'd0 ;

  // value method axi_mem_rd_rready
  assign M_AXI_MEM_rready =
	     !c2h_axiRd_isRst_isInReset && c2h_axiRd_out$FULL_N ;

  // value method axi_mem_wr_awvalid
  assign M_AXI_MEM_awvalid =
	     !h2c_axiWr_isRst_isInReset && h2c_axiWr_in_addr$EMPTY_N ;

  // value method axi_mem_wr_awaddr
  assign M_AXI_MEM_awaddr =
	     h2c_axiWr_in_addr$EMPTY_N ?
	       h2c_axiWr_in_addr$D_OUT[60:29] :
	       32'd0 ;

  // value method axi_mem_wr_awlen
  assign M_AXI_MEM_awlen =
	     h2c_axiWr_in_addr$EMPTY_N ?
	       h2c_axiWr_in_addr$D_OUT[28:21] :
	       8'd0 ;

  // value method axi_mem_wr_awsize
  assign M_AXI_MEM_awsize =
	     h2c_axiWr_in_addr$EMPTY_N ?
	       h2c_axiWr_in_addr$D_OUT[20:18] :
	       3'd0 ;

  // value method axi_mem_wr_awburst
  assign M_AXI_MEM_awburst =
	     h2c_axiWr_in_addr$EMPTY_N ?
	       h2c_axiWr_in_addr$D_OUT[17:16] :
	       2'd0 ;

  // value method axi_mem_wr_awlock
  assign M_AXI_MEM_awlock =
	     h2c_axiWr_in_addr$EMPTY_N && h2c_axiWr_in_addr$D_OUT[15] ;

  // value method axi_mem_wr_awcache
  assign M_AXI_MEM_awcache =
	     (!h2c_axiWr_in_addr$EMPTY_N || h2c_axiWr_wawcache$wget == 4'd0) ?
	       4'd0 :
	       CASE_h2c_axiWr_wawcachewget_1_h2c_axiWr_wawca_ETC__q5 ;

  // value method axi_mem_wr_awprot
  assign M_AXI_MEM_awprot =
	     h2c_axiWr_in_addr$EMPTY_N ?
	       h2c_axiWr_in_addr$D_OUT[10:8] :
	       3'd0 ;

  // value method axi_mem_wr_awqos
  assign M_AXI_MEM_awqos =
	     h2c_axiWr_in_addr$EMPTY_N ? h2c_axiWr_in_addr$D_OUT[7:4] : 4'd0 ;

  // value method axi_mem_wr_awregion
  assign M_AXI_MEM_awregion =
	     h2c_axiWr_in_addr$EMPTY_N ? h2c_axiWr_in_addr$D_OUT[3:0] : 4'd0 ;

  // value method axi_mem_wr_wvalid
  assign M_AXI_MEM_wvalid =
	     !h2c_axiWr_isRst_isInReset && h2c_axiWr_in_data$EMPTY_N ;

  // value method axi_mem_wr_wdata
  assign M_AXI_MEM_wdata =
	     h2c_axiWr_in_data$EMPTY_N ?
	       h2c_axiWr_in_data$D_OUT[576:65] :
	       512'd0 ;

  // value method axi_mem_wr_wstrb
  assign M_AXI_MEM_wstrb =
	     h2c_axiWr_in_data$EMPTY_N ?
	       h2c_axiWr_in_data$D_OUT[64:1] :
	       64'd0 ;

  // value method axi_mem_wr_wlast
  assign M_AXI_MEM_wlast =
	     h2c_axiWr_in_data$EMPTY_N && h2c_axiWr_in_data$D_OUT[0] ;

  // value method axi_mem_wr_bready
  assign M_AXI_MEM_bready =
	     !h2c_axiWr_isRst_isInReset && h2c_axiWr_out$FULL_N ;

  // value method axis_rx_tready
  assign AXIS_NETWORK_RX_tready =
	     !h2c_axisRx_isRst_isInReset && h2c_axisRx_in_1$FULL_N ;

  // value method axis_tx_tvalid
  assign AXIS_NETWORK_TX_tvalid =
	     !c2h_axisTX_isRst_isInReset && c2h_axisTX_out_1$EMPTY_N ;

  // value method axis_tx_tdata
  assign AXIS_NETWORK_TX_tdata =
	     c2h_axisTX_out_1$EMPTY_N ?
	       c2h_axisTX_out_1$D_OUT[580:69] :
	       512'd0 ;

  // value method axis_tx_tlast
  assign AXIS_NETWORK_TX_tlast =
	     c2h_axisTX_out_1$EMPTY_N && c2h_axisTX_out_1$D_OUT[0] ;

  // value method axis_tx_tkeep
  assign AXIS_NETWORK_TX_tkeep =
	     c2h_axisTX_out_1$EMPTY_N ? c2h_axisTX_out_1$D_OUT[68:5] : 64'd0 ;

  // value method axis_tx_tDest
  assign AXIS_NETWORK_TX_tDest =
	     c2h_axisTX_out_1$EMPTY_N ? c2h_axisTX_out_1$D_OUT[4:1] : 4'd0 ;

  // submodule c2h_activeWriteFifo
  FIFO1 #(.width(32'd2), .guarded(1'd1)) c2h_activeWriteFifo(.RST(resetn),
							     .CLK(aclk),
							     .D_IN(c2h_activeWriteFifo$D_IN),
							     .ENQ(c2h_activeWriteFifo$ENQ),
							     .DEQ(c2h_activeWriteFifo$DEQ),
							     .CLR(c2h_activeWriteFifo$CLR),
							     .D_OUT(c2h_activeWriteFifo$D_OUT),
							     .FULL_N(c2h_activeWriteFifo$FULL_N),
							     .EMPTY_N(c2h_activeWriteFifo$EMPTY_N));

  // submodule c2h_axiRd_in
  FIFO2 #(.width(32'd61), .guarded(1'd1)) c2h_axiRd_in(.RST(resetn),
						       .CLK(aclk),
						       .D_IN(c2h_axiRd_in$D_IN),
						       .ENQ(c2h_axiRd_in$ENQ),
						       .DEQ(c2h_axiRd_in$DEQ),
						       .CLR(c2h_axiRd_in$CLR),
						       .D_OUT(c2h_axiRd_in$D_OUT),
						       .FULL_N(c2h_axiRd_in$FULL_N),
						       .EMPTY_N(c2h_axiRd_in$EMPTY_N));

  // submodule c2h_axiRd_out
  FIFO2 #(.width(32'd515), .guarded(1'd1)) c2h_axiRd_out(.RST(resetn),
							 .CLK(aclk),
							 .D_IN(c2h_axiRd_out$D_IN),
							 .ENQ(c2h_axiRd_out$ENQ),
							 .DEQ(c2h_axiRd_out$DEQ),
							 .CLR(c2h_axiRd_out$CLR),
							 .D_OUT(c2h_axiRd_out$D_OUT),
							 .FULL_N(c2h_axiRd_out$FULL_N),
							 .EMPTY_N(c2h_axiRd_out$EMPTY_N));

  // submodule c2h_axiWr_in_addr
  FIFO2 #(.width(32'd93), .guarded(1'd1)) c2h_axiWr_in_addr(.RST(resetn),
							    .CLK(aclk),
							    .D_IN(c2h_axiWr_in_addr$D_IN),
							    .ENQ(c2h_axiWr_in_addr$ENQ),
							    .DEQ(c2h_axiWr_in_addr$DEQ),
							    .CLR(c2h_axiWr_in_addr$CLR),
							    .D_OUT(c2h_axiWr_in_addr$D_OUT),
							    .FULL_N(c2h_axiWr_in_addr$FULL_N),
							    .EMPTY_N(c2h_axiWr_in_addr$EMPTY_N));

  // submodule c2h_axiWr_in_data
  FIFO2 #(.width(32'd577), .guarded(1'd1)) c2h_axiWr_in_data(.RST(resetn),
							     .CLK(aclk),
							     .D_IN(c2h_axiWr_in_data$D_IN),
							     .ENQ(c2h_axiWr_in_data$ENQ),
							     .DEQ(c2h_axiWr_in_data$DEQ),
							     .CLR(c2h_axiWr_in_data$CLR),
							     .D_OUT(c2h_axiWr_in_data$D_OUT),
							     .FULL_N(c2h_axiWr_in_data$FULL_N),
							     .EMPTY_N(c2h_axiWr_in_data$EMPTY_N));

  // submodule c2h_axiWr_out
  FIFO2 #(.width(32'd2), .guarded(1'd1)) c2h_axiWr_out(.RST(resetn),
						       .CLK(aclk),
						       .D_IN(c2h_axiWr_out$D_IN),
						       .ENQ(c2h_axiWr_out$ENQ),
						       .DEQ(c2h_axiWr_out$DEQ),
						       .CLR(c2h_axiWr_out$CLR),
						       .D_OUT(c2h_axiWr_out$D_OUT),
						       .FULL_N(c2h_axiWr_out$FULL_N),
						       .EMPTY_N(c2h_axiWr_out$EMPTY_N));

  // submodule c2h_axisTX_out
  FIFO2 #(.width(32'd581), .guarded(1'd1)) c2h_axisTX_out(.RST(resetn),
							  .CLK(aclk),
							  .D_IN(c2h_axisTX_out$D_IN),
							  .ENQ(c2h_axisTX_out$ENQ),
							  .DEQ(c2h_axisTX_out$DEQ),
							  .CLR(c2h_axisTX_out$CLR),
							  .D_OUT(),
							  .FULL_N(),
							  .EMPTY_N());

  // submodule c2h_axisTX_out_1
  FIFO2 #(.width(32'd581), .guarded(1'd1)) c2h_axisTX_out_1(.RST(resetn),
							    .CLK(aclk),
							    .D_IN(c2h_axisTX_out_1$D_IN),
							    .ENQ(c2h_axisTX_out_1$ENQ),
							    .DEQ(c2h_axisTX_out_1$DEQ),
							    .CLR(c2h_axisTX_out_1$CLR),
							    .D_OUT(c2h_axisTX_out_1$D_OUT),
							    .FULL_N(c2h_axisTX_out_1$FULL_N),
							    .EMPTY_N(c2h_axisTX_out_1$EMPTY_N));

  // submodule c2h_nextCmdFifo
  SizedFIFO #(.p1width(32'd87),
	      .p2depth(32'd32),
	      .p3cntr_width(32'd5),
	      .guarded(1'd1)) c2h_nextCmdFifo(.RST(resetn),
					      .CLK(aclk),
					      .D_IN(c2h_nextCmdFifo$D_IN),
					      .ENQ(c2h_nextCmdFifo$ENQ),
					      .DEQ(c2h_nextCmdFifo$DEQ),
					      .CLR(c2h_nextCmdFifo$CLR),
					      .D_OUT(c2h_nextCmdFifo$D_OUT),
					      .FULL_N(c2h_nextCmdFifo$FULL_N),
					      .EMPTY_N(c2h_nextCmdFifo$EMPTY_N));

  // submodule c2h_nextRspFifo
  SizedFIFO0 #(.p1depth(32'd32),
	       .p2cntr_width(32'd6),
	       .guarded(1'd1)) c2h_nextRspFifo(.RST(resetn),
					       .CLK(aclk),
					       .ENQ(c2h_nextRspFifo$ENQ),
					       .DEQ(c2h_nextRspFifo$DEQ),
					       .CLR(c2h_nextRspFifo$CLR),
					       .FULL_N(c2h_nextRspFifo$FULL_N),
					       .EMPTY_N(c2h_nextRspFifo$EMPTY_N));

  // submodule c2h_nextWriteFifo
  SizedFIFO #(.p1width(32'd54),
	      .p2depth(32'd8),
	      .p3cntr_width(32'd3),
	      .guarded(1'd1)) c2h_nextWriteFifo(.RST(resetn),
						.CLK(aclk),
						.D_IN(c2h_nextWriteFifo$D_IN),
						.ENQ(c2h_nextWriteFifo$ENQ),
						.DEQ(c2h_nextWriteFifo$DEQ),
						.CLR(c2h_nextWriteFifo$CLR),
						.D_OUT(c2h_nextWriteFifo$D_OUT),
						.FULL_N(c2h_nextWriteFifo$FULL_N),
						.EMPTY_N(c2h_nextWriteFifo$EMPTY_N));

  // submodule h2c_activeWriteFifo
  FIFO1 #(.width(32'd1), .guarded(1'd1)) h2c_activeWriteFifo(.RST(resetn),
							     .CLK(aclk),
							     .D_IN(h2c_activeWriteFifo$D_IN),
							     .ENQ(h2c_activeWriteFifo$ENQ),
							     .DEQ(h2c_activeWriteFifo$DEQ),
							     .CLR(h2c_activeWriteFifo$CLR),
							     .D_OUT(h2c_activeWriteFifo$D_OUT),
							     .FULL_N(h2c_activeWriteFifo$FULL_N),
							     .EMPTY_N(h2c_activeWriteFifo$EMPTY_N));

  // submodule h2c_axiRd_in
  FIFO2 #(.width(32'd93), .guarded(1'd1)) h2c_axiRd_in(.RST(resetn),
						       .CLK(aclk),
						       .D_IN(h2c_axiRd_in$D_IN),
						       .ENQ(h2c_axiRd_in$ENQ),
						       .DEQ(h2c_axiRd_in$DEQ),
						       .CLR(h2c_axiRd_in$CLR),
						       .D_OUT(h2c_axiRd_in$D_OUT),
						       .FULL_N(h2c_axiRd_in$FULL_N),
						       .EMPTY_N(h2c_axiRd_in$EMPTY_N));

  // submodule h2c_axiRd_out
  FIFO2 #(.width(32'd515), .guarded(1'd1)) h2c_axiRd_out(.RST(resetn),
							 .CLK(aclk),
							 .D_IN(h2c_axiRd_out$D_IN),
							 .ENQ(h2c_axiRd_out$ENQ),
							 .DEQ(h2c_axiRd_out$DEQ),
							 .CLR(h2c_axiRd_out$CLR),
							 .D_OUT(h2c_axiRd_out$D_OUT),
							 .FULL_N(h2c_axiRd_out$FULL_N),
							 .EMPTY_N(h2c_axiRd_out$EMPTY_N));

  // submodule h2c_axiWr_in_addr
  FIFO2 #(.width(32'd61), .guarded(1'd1)) h2c_axiWr_in_addr(.RST(resetn),
							    .CLK(aclk),
							    .D_IN(h2c_axiWr_in_addr$D_IN),
							    .ENQ(h2c_axiWr_in_addr$ENQ),
							    .DEQ(h2c_axiWr_in_addr$DEQ),
							    .CLR(h2c_axiWr_in_addr$CLR),
							    .D_OUT(h2c_axiWr_in_addr$D_OUT),
							    .FULL_N(h2c_axiWr_in_addr$FULL_N),
							    .EMPTY_N(h2c_axiWr_in_addr$EMPTY_N));

  // submodule h2c_axiWr_in_data
  FIFO2 #(.width(32'd577), .guarded(1'd1)) h2c_axiWr_in_data(.RST(resetn),
							     .CLK(aclk),
							     .D_IN(h2c_axiWr_in_data$D_IN),
							     .ENQ(h2c_axiWr_in_data$ENQ),
							     .DEQ(h2c_axiWr_in_data$DEQ),
							     .CLR(h2c_axiWr_in_data$CLR),
							     .D_OUT(h2c_axiWr_in_data$D_OUT),
							     .FULL_N(h2c_axiWr_in_data$FULL_N),
							     .EMPTY_N(h2c_axiWr_in_data$EMPTY_N));

  // submodule h2c_axiWr_out
  FIFO2 #(.width(32'd2), .guarded(1'd1)) h2c_axiWr_out(.RST(resetn),
						       .CLK(aclk),
						       .D_IN(h2c_axiWr_out$D_IN),
						       .ENQ(h2c_axiWr_out$ENQ),
						       .DEQ(h2c_axiWr_out$DEQ),
						       .CLR(h2c_axiWr_out$CLR),
						       .D_OUT(h2c_axiWr_out$D_OUT),
						       .FULL_N(h2c_axiWr_out$FULL_N),
						       .EMPTY_N(h2c_axiWr_out$EMPTY_N));

  // submodule h2c_axisRx_in
  FIFO2 #(.width(32'd581), .guarded(1'd1)) h2c_axisRx_in(.RST(resetn),
							 .CLK(aclk),
							 .D_IN(h2c_axisRx_in$D_IN),
							 .ENQ(h2c_axisRx_in$ENQ),
							 .DEQ(h2c_axisRx_in$DEQ),
							 .CLR(h2c_axisRx_in$CLR),
							 .D_OUT(),
							 .FULL_N(),
							 .EMPTY_N());

  // submodule h2c_axisRx_in_1
  FIFO2 #(.width(32'd581), .guarded(1'd1)) h2c_axisRx_in_1(.RST(resetn),
							   .CLK(aclk),
							   .D_IN(h2c_axisRx_in_1$D_IN),
							   .ENQ(h2c_axisRx_in_1$ENQ),
							   .DEQ(h2c_axisRx_in_1$DEQ),
							   .CLR(h2c_axisRx_in_1$CLR),
							   .D_OUT(h2c_axisRx_in_1$D_OUT),
							   .FULL_N(h2c_axisRx_in_1$FULL_N),
							   .EMPTY_N(h2c_axisRx_in_1$EMPTY_N));

  // submodule h2c_dataFifo_memory
  BRAM2 #(.PIPELINED(1'd0),
	  .ADDR_WIDTH(32'd9),
	  .DATA_WIDTH(32'd512),
	  .MEMSIZE(10'd512)) h2c_dataFifo_memory(.CLKA(aclk),
						 .CLKB(aclk),
						 .ADDRA(h2c_dataFifo_memory$ADDRA),
						 .ADDRB(h2c_dataFifo_memory$ADDRB),
						 .DIA(h2c_dataFifo_memory$DIA),
						 .DIB(h2c_dataFifo_memory$DIB),
						 .WEA(h2c_dataFifo_memory$WEA),
						 .WEB(h2c_dataFifo_memory$WEB),
						 .ENA(h2c_dataFifo_memory$ENA),
						 .ENB(h2c_dataFifo_memory$ENB),
						 .DOA(),
						 .DOB(h2c_dataFifo_memory$DOB));

  // submodule h2c_isNetworkTransferFifo
  SizedFIFO #(.p1width(32'd1),
	      .p2depth(32'd32),
	      .p3cntr_width(32'd5),
	      .guarded(1'd1)) h2c_isNetworkTransferFifo(.RST(resetn),
							.CLK(aclk),
							.D_IN(h2c_isNetworkTransferFifo$D_IN),
							.ENQ(h2c_isNetworkTransferFifo$ENQ),
							.DEQ(h2c_isNetworkTransferFifo$DEQ),
							.CLR(h2c_isNetworkTransferFifo$CLR),
							.D_OUT(h2c_isNetworkTransferFifo$D_OUT),
							.FULL_N(h2c_isNetworkTransferFifo$FULL_N),
							.EMPTY_N(h2c_isNetworkTransferFifo$EMPTY_N));

  // submodule h2c_nextCmdFifo
  SizedFIFO #(.p1width(32'd87),
	      .p2depth(32'd32),
	      .p3cntr_width(32'd5),
	      .guarded(1'd1)) h2c_nextCmdFifo(.RST(resetn),
					      .CLK(aclk),
					      .D_IN(h2c_nextCmdFifo$D_IN),
					      .ENQ(h2c_nextCmdFifo$ENQ),
					      .DEQ(h2c_nextCmdFifo$DEQ),
					      .CLR(h2c_nextCmdFifo$CLR),
					      .D_OUT(h2c_nextCmdFifo$D_OUT),
					      .FULL_N(h2c_nextCmdFifo$FULL_N),
					      .EMPTY_N(h2c_nextCmdFifo$EMPTY_N));

  // submodule h2c_nextRspFifo
  SizedFIFO0 #(.p1depth(32'd8),
	       .p2cntr_width(32'd4),
	       .guarded(1'd1)) h2c_nextRspFifo(.RST(resetn),
					       .CLK(aclk),
					       .ENQ(h2c_nextRspFifo$ENQ),
					       .DEQ(h2c_nextRspFifo$DEQ),
					       .CLR(h2c_nextRspFifo$CLR),
					       .FULL_N(h2c_nextRspFifo$FULL_N),
					       .EMPTY_N(h2c_nextRspFifo$EMPTY_N));

  // submodule h2c_nextWriteFifo
  SizedFIFO #(.p1width(32'd22),
	      .p2depth(32'd32),
	      .p3cntr_width(32'd5),
	      .guarded(1'd1)) h2c_nextWriteFifo(.RST(resetn),
						.CLK(aclk),
						.D_IN(h2c_nextWriteFifo$D_IN),
						.ENQ(h2c_nextWriteFifo$ENQ),
						.DEQ(h2c_nextWriteFifo$DEQ),
						.CLR(h2c_nextWriteFifo$CLR),
						.D_OUT(h2c_nextWriteFifo$D_OUT),
						.FULL_N(h2c_nextWriteFifo$FULL_N),
						.EMPTY_N(h2c_nextWriteFifo$EMPTY_N));

  // rule RL_parser_receiveFirstPacket
  assign WILL_FIRE_RL_parser_receiveFirstPacket =
	     parser_rxInFifo_rv[581] && parser_recState == 2'd0 ;

  // rule RL_parser_discardIncomingPacket
  assign WILL_FIRE_RL_parser_discardIncomingPacket =
	     parser_rxInFifo_rv[581] && parser_recState == 2'd1 ;

  // rule RL_parser_sendFirstPacket
  assign WILL_FIRE_RL_parser_sendFirstPacket =
	     parser_txInFifo_rv[512] &&
	     !parser_txOutFifo_rv$port1__read[581] &&
	     parser_txCnt == 5'd0 ;

  // rule RL_parser_sendRegularPacket
  assign WILL_FIRE_RL_parser_sendRegularPacket =
	     parser_txInFifo_rv[512] && parser_txBufFifo_rv[112] &&
	     !parser_txOutFifo_rv$port1__read[581] &&
	     parser_txCnt != 5'd0 &&
	     parser_txCnt < 5'd16 ;

  // rule RL_parser_sendLastPacket
  assign WILL_FIRE_RL_parser_sendLastPacket =
	     parser_txBufFifo_rv[112] &&
	     !parser_txOutFifo_rv$port1__read[581] &&
	     parser_txCnt == 5'd16 ;

  // rule RL_h2c_bufferReadDataFromNetwork
  assign WILL_FIRE_RL_h2c_bufferReadDataFromNetwork =
	     NOT_h2c_dataFifo_rRdPtr_read__24_PLUS_256_66_E_ETC___d468 &&
	     parser_rxOutFifo_rv[512] &&
	     h2c_isNetworkTransferFifo$EMPTY_N &&
	     h2c_isNetworkTransferFifo$D_OUT ;

  // rule RL_parser_forwardIncomingPacket
  assign WILL_FIRE_RL_parser_forwardIncomingPacket =
	     parser_rxInFifo_rv[581] && parser_rxBufFifo_rv[400] &&
	     !parser_rxOutFifo_rv$port1__read[512] &&
	     parser_recState == 2'd2 ;

  // rule RL_axiCtrl_axiReadSpecialIsHandled
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled =
	     axiCtrl_readSlave_in_rv[15] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd0 ;

  // rule RL_axiCtrl_axiReadSpecialIsHandled_1
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_1 =
	     axiCtrl_readSlave_in_rv[15] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd1 ;

  // rule RL_axiCtrl_axiReadSpecialIsHandled_2
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_2 =
	     axiCtrl_readSlave_in_rv[15] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd2 ;

  // rule RL_axiCtrl_axiReadSpecialIsHandled_3
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_3 =
	     axiCtrl_readSlave_in_rv[15] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd4 ;

  // rule RL_axiCtrl_axiReadSpecialIsHandled_4
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_4 =
	     axiCtrl_readSlave_in_rv[15] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd5 ;

  // rule RL_axiCtrl_axiReadSpecialIsHandled_5
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_5 =
	     axiCtrl_readSlave_in_rv[15] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd6 ;

  // rule RL_axiCtrl_axiReadSpecialIsHandled_6
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_6 =
	     axiCtrl_readSlave_in_rv[15] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd8 ;

  // rule RL_axiCtrl_axiReadSpecialIsHandled_7
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7 =
	     axiCtrl_readSlave_in_rv[15] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd9 ;

  // rule RL_axiCtrl_axiReadSpecialIsHandled_8
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8 =
	     axiCtrl_readSlave_in_rv[15] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd10 ;

  // rule RL_axiCtrl_axiReadSpecial
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecial =
	     axiCtrl_readSlave_in_rv[15] &&
	     !axiCtrl_readSlave_out_rv$port1__read[66] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd0 &&
	     !axiCtrl_readBusy ;

  // rule RL_axiCtrl_axiReadSpecial_1
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecial_1 =
	     axiCtrl_readSlave_in_rv[15] &&
	     !axiCtrl_readSlave_out_rv$port1__read[66] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd1 &&
	     !axiCtrl_readBusy ;

  // rule RL_axiCtrl_axiReadSpecial_2
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecial_2 =
	     axiCtrl_readSlave_in_rv[15] &&
	     !axiCtrl_readSlave_out_rv$port1__read[66] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd2 &&
	     !axiCtrl_readBusy ;

  // rule RL_axiCtrl_axiReadSpecial_3
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecial_3 =
	     axiCtrl_readSlave_in_rv[15] &&
	     !axiCtrl_readSlave_out_rv$port1__read[66] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd4 &&
	     !axiCtrl_readBusy ;

  // rule RL_h2c_bufferReadDataFromHost
  assign WILL_FIRE_RL_h2c_bufferReadDataFromHost =
	     NOT_h2c_dataFifo_rRdPtr_read__24_PLUS_256_66_E_ETC___d468 &&
	     h2c_isNetworkTransferFifo$EMPTY_N &&
	     h2c_axiRd_out$EMPTY_N &&
	     !h2c_isNetworkTransferFifo$D_OUT ;

  // rule RL_axiCtrl_axiReadSpecial_4
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecial_4 =
	     axiCtrl_readSlave_in_rv[15] &&
	     !axiCtrl_readSlave_out_rv$port1__read[66] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd5 &&
	     !axiCtrl_readBusy ;

  // rule RL_axiCtrl_axiReadSpecial_5
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecial_5 =
	     axiCtrl_readSlave_in_rv[15] &&
	     !axiCtrl_readSlave_out_rv$port1__read[66] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd6 &&
	     !axiCtrl_readBusy ;

  // rule RL_axiCtrl_axiReadSpecial_6
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecial_6 =
	     axiCtrl_readSlave_in_rv[15] &&
	     !axiCtrl_readSlave_out_rv$port1__read[66] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd8 &&
	     !axiCtrl_readBusy ;

  // rule RL_axiCtrl_axiReadSpecial_7
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 =
	     axiCtrl_readSlave_in_rv[15] &&
	     !axiCtrl_readSlave_out_rv$port1__read[66] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd9 &&
	     !axiCtrl_readBusy ;

  // rule RL_axiCtrl_axiReadSpecial_8
  assign WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 =
	     axiCtrl_readSlave_in_rv[15] &&
	     !axiCtrl_readSlave_out_rv$port1__read[66] &&
	     axiCtrl_readSlave_in_rv[9:6] == 4'd10 &&
	     !axiCtrl_readBusy ;

  // rule RL_axiCtrl_axiReadFallback
  assign WILL_FIRE_RL_axiCtrl_axiReadFallback =
	     axiCtrl_readSlave_in_rv[15] &&
	     !axiCtrl_readSlave_out_rv$port1__read[66] &&
	     !axiCtrl_readIsHandled$whas ;

  // rule RL_axiCtrl_1_axiWriteSpecialIsHandled
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled =
	     axiCtrl_writeSlave_in_rv[87] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd0 ;

  // rule RL_axiCtrl_1_axiWriteSpecial
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial =
	     axiCtrl_writeSlave_in_rv[87] &&
	     !axiCtrl_writeSlave_out_rv$port1__read[2] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd0 &&
	     !axiCtrl_writeBusy ;

  // rule RL_c2h_issueRead
  assign WILL_FIRE_RL_c2h_issueRead =
	     c2h_nextCmdFifo$EMPTY_N && c2h_nextWriteFifo$FULL_N &&
	     c2h_axiRd_in$FULL_N ;

  // rule RL_c2h_issueWrite
  assign WILL_FIRE_RL_c2h_issueWrite =
	     c2h_nextWriteFifo$EMPTY_N && c2h_activeWriteFifo$FULL_N &&
	     c2h_axiWr_in_addr$FULL_N ;

  // rule RL_c2h_forwardData
  assign WILL_FIRE_RL_c2h_forwardData =
	     c2h_dataFifo_rv[512] &&
	     c2h_activeWriteFifo_i_notEmpty__67_AND_NOT_par_ETC___d275 &&
	     !c2h_activeWriteFifo$D_OUT[1] ;

  // rule RL_c2h_genZeroData
  assign WILL_FIRE_RL_c2h_genZeroData =
	     c2h_activeWriteFifo_i_notEmpty__67_AND_NOT_par_ETC___d275 &&
	     c2h_activeWriteFifo$D_OUT[1] ;

  // rule RL_axiCtrl_1_axiWriteSpecialIsHandled_1
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd1 ;

  // rule RL_axiCtrl_1_axiWriteSpecial_1
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     !axiCtrl_writeSlave_out_rv$port1__read[2] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd1 &&
	     !axiCtrl_writeBusy ;

  // rule RL_axiCtrl_1_axiWriteSpecialIsHandled_2
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd2 ;

  // rule RL_axiCtrl_1_axiWriteSpecial_2
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     !axiCtrl_writeSlave_out_rv$port1__read[2] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd2 &&
	     !axiCtrl_writeBusy ;

  // rule RL_axiCtrl_1_axiWriteSpecialIsHandled_3
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd3 ;

  // rule RL_axiCtrl_1_axiWriteSpecial_3
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     !axiCtrl_writeSlave_out_rv$port1__read[2] &&
	     c2h_nextCmdFifo$FULL_N &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd3 &&
	     !axiCtrl_writeBusy ;

  // rule RL_axiCtrl_1_axiWriteSpecialIsHandled_4
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd4 ;

  // rule RL_axiCtrl_1_axiWriteSpecial_4
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     !axiCtrl_writeSlave_out_rv$port1__read[2] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd4 &&
	     !axiCtrl_writeBusy ;

  // rule RL_h2c_issueRead
  assign WILL_FIRE_RL_h2c_issueRead =
	     h2c_nextCmdFifo$EMPTY_N && h2c_nextWriteFifo$FULL_N &&
	     h2c_axiRd_in$FULL_N &&
	     h2c_isNetworkTransferFifo$FULL_N ;

  // rule RL_h2c_issueWrite
  assign WILL_FIRE_RL_h2c_issueWrite =
	     h2c_nextWriteFifo$EMPTY_N && h2c_axiWr_in_addr$FULL_N &&
	     h2c_activeWriteFifo$FULL_N ;

  // rule RL_h2c_forwardData
  assign WILL_FIRE_RL_h2c_forwardData =
	     NOT_h2c_dataFifo_rRdPtr_read__24_EQ_h2c_dataFi_ETC___d500 &&
	     h2c_activeWriteFifo$EMPTY_N &&
	     h2c_axiWr_in_data$FULL_N &&
	     h2c_nextRspFifo$FULL_N &&
	     !h2c_activeWriteFifo$D_OUT ;

  // rule RL_h2c_genZeroData
  assign WILL_FIRE_RL_h2c_genZeroData =
	     h2c_activeWriteFifo$EMPTY_N && h2c_axiWr_in_data$FULL_N &&
	     h2c_nextRspFifo$FULL_N &&
	     h2c_activeWriteFifo$D_OUT ;

  // rule RL_axiCtrl_1_axiWriteSpecialIsHandled_5
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd5 ;

  // rule RL_axiCtrl_1_axiWriteSpecial_5
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     !axiCtrl_writeSlave_out_rv$port1__read[2] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd5 &&
	     !axiCtrl_writeBusy ;

  // rule RL_axiCtrl_1_axiWriteSpecialIsHandled_6
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd6 ;

  // rule RL_axiCtrl_1_axiWriteSpecial_6
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     !axiCtrl_writeSlave_out_rv$port1__read[2] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd6 &&
	     !axiCtrl_writeBusy ;

  // rule RL_axiCtrl_1_axiWriteSpecialIsHandled_7
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd7 ;

  // rule RL_axiCtrl_1_axiWriteSpecial_7
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     !axiCtrl_writeSlave_out_rv$port1__read[2] &&
	     h2c_nextCmdFifo$FULL_N &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd7 &&
	     !axiCtrl_writeBusy ;

  // rule RL_axiCtrl_1_axiWriteSpecialIsHandled_8
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd10 ;

  // rule RL_axiCtrl_1_axiWriteSpecial_8
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 =
	     axiCtrl_writeSlave_in_rv[87] &&
	     !axiCtrl_writeSlave_out_rv$port1__read[2] &&
	     axiCtrl_writeSlave_in_rv[81:78] == 4'd10 &&
	     !axiCtrl_writeBusy ;

  // rule RL_axiCtrl_1_axiWriteFallback
  assign WILL_FIRE_RL_axiCtrl_1_axiWriteFallback =
	     axiCtrl_writeSlave_in_rv[87] &&
	     !axiCtrl_writeSlave_out_rv$port1__read[2] &&
	     !axiCtrl_writeIsHandled$whas &&
	     !WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	     !WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	     !WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	     !WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	     !WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	     !WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	     !WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	     !WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 &&
	     !WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial ;

  // inputs to muxes for submodule ports
  assign MUX_c2hStatus$write_1__SEL_1 =
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	     IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801[7] ;
  assign MUX_c2h_axiWr_in_data$enq_1__SEL_1 =
	     WILL_FIRE_RL_c2h_forwardData && !c2h_activeWriteFifo$D_OUT[0] ;
  assign MUX_h2cStatus$write_1__SEL_1 =
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	     IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801[7] ;
  assign MUX_parser_recState$write_1__PSEL_1 =
	     WILL_FIRE_RL_parser_forwardIncomingPacket ||
	     WILL_FIRE_RL_parser_discardIncomingPacket ;
  assign MUX_parser_recState$write_1__SEL_1 =
	     MUX_parser_recState$write_1__PSEL_1 && parser_rxInFifo_rv[0] ;
  assign MUX_parser_txInFifo_rv$port1__write_1__SEL_1 =
	     WILL_FIRE_RL_c2h_forwardData && c2h_activeWriteFifo$D_OUT[0] ;
  assign MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_1 =
	     { 1'd1, v__h27206, 2'd0 } ;
  assign MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_2 =
	     { 1'd1, v__h27700, 2'd0 } ;
  assign MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_3 =
	     { 1'd1, c2hDstAddrReg, 2'd0 } ;
  assign MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_4 =
	     { 1'd1, v__h28010, 2'd0 } ;
  assign MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_5 =
	     { 1'd1, h2cSrcAddrReg, 2'd0 } ;
  assign MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_6 =
	     { 1'd1, v__h28611, 2'd0 } ;
  assign MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_7 =
	     { 1'd1, v__h28916, 2'd0 } ;
  assign MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_8 =
	     { 1'd1, v__h29069, 2'd0 } ;
  assign MUX_c2h_axiWr_in_data$enq_1__VAL_1 =
	     { c2h_dataFifo_rv[511:0],
	       64'hFFFFFFFFFFFFFFFF,
	       c2h_dataCnt == 7'd63 } ;
  assign MUX_c2h_axiWr_in_data$enq_1__VAL_2 =
	     { 576'h00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFF,
	       c2h_dataCnt == 7'd63 } ;
  assign MUX_h2c_axiWr_in_data$enq_1__VAL_1 =
	     { x_data__h21102, 64'hFFFFFFFFFFFFFFFF, h2c_dataCnt == 7'd63 } ;
  assign MUX_h2c_axiWr_in_data$enq_1__VAL_2 =
	     { 576'h00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFF,
	       h2c_dataCnt == 7'd63 } ;
  assign MUX_h2c_dataFifo_wDataIn$wset_1__VAL_2 =
	     (h2c_axiRd_out$D_OUT[2:1] == 2'd0) ?
	       h2c_axiRd_out$D_OUT[514:3] :
	       512'd0 ;
  assign MUX_parser_recState$write_1__VAL_2 =
	     parser_rxInFifo_rv_port0__read_BITS_18_TO_5_EQ_ETC___d24 ?
	       2'd2 :
	       2'd1 ;
  assign MUX_parser_txCnt$write_1__VAL_1 = parser_txCnt + 5'd1 ;
  assign MUX_parser_txInFifo_rv$port1__write_1__VAL_1 =
	     { 1'd1, c2h_dataFifo_rv[511:0] } ;
  assign MUX_parser_txOutFifo_rv$port1__write_1__VAL_1 =
	     { 1'd1, out__h3630, 69'h1FFFFFFFFFFFFFFFE0 } ;
  assign MUX_parser_txOutFifo_rv$port1__write_1__VAL_2 =
	     { 1'd1, out__h6189, 69'h1FFFFFFFFFFFFFFFE0 } ;
  assign MUX_parser_txOutFifo_rv$port1__write_1__VAL_3 =
	     { 1'd1, out__h6417, 69'd524257 } ;

  // inlined wires
  assign parser_rxBufWire$whas =
	     WILL_FIRE_RL_parser_receiveFirstPacket &&
	     parser_rxInFifo_rv_port0__read_BITS_18_TO_5_EQ_ETC___d24 ||
	     WILL_FIRE_RL_parser_forwardIncomingPacket &&
	     !parser_rxInFifo_rv[0] ;
  assign parser_txBufWire$whas =
	     WILL_FIRE_RL_parser_sendRegularPacket ||
	     WILL_FIRE_RL_parser_sendFirstPacket ;
  always@(c2h_axiRd_in$D_OUT)
  begin
    case (c2h_axiRd_in$D_OUT[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  c2h_axiRd_warcache$wget = c2h_axiRd_in$D_OUT[14:11];
      default: c2h_axiRd_warcache$wget = 4'd11;
    endcase
  end
  always@(c2h_axiWr_in_addr$D_OUT)
  begin
    case (c2h_axiWr_in_addr$D_OUT[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  c2h_axiWr_wawcache$wget = c2h_axiWr_in_addr$D_OUT[14:11];
      default: c2h_axiWr_wawcache$wget = 4'd15;
    endcase
  end
  always@(h2c_axiRd_in$D_OUT)
  begin
    case (h2c_axiRd_in$D_OUT[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  h2c_axiRd_warcache$wget = h2c_axiRd_in$D_OUT[14:11];
      default: h2c_axiRd_warcache$wget = 4'd11;
    endcase
  end
  always@(h2c_axiWr_in_addr$D_OUT)
  begin
    case (h2c_axiWr_in_addr$D_OUT[14:11])
      4'd0, 4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  h2c_axiWr_wawcache$wget = h2c_axiWr_in_addr$D_OUT[14:11];
      default: h2c_axiWr_wawcache$wget = 4'd15;
    endcase
  end
  assign axiCtrl_readIsHandled$whas =
	     WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_6 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_5 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_4 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_3 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_2 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_1 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled ;
  assign axiCtrl_writeIsHandled$whas =
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled ;
  assign h2c_dataFifo_pwEnqueue$whas =
	     WILL_FIRE_RL_h2c_bufferReadDataFromNetwork ||
	     WILL_FIRE_RL_h2c_bufferReadDataFromHost ;
  assign c2h_axiRd_rinpkg$wget =
	     { M_AXI_MEM_rdata, M_AXI_MEM_rresp, M_AXI_MEM_rlast } ;
  assign h2c_axiRd_rinpkg$wget =
	     { M_AXI_PCI_rdata, M_AXI_PCI_rresp, M_AXI_PCI_rlast } ;
  assign parser_rxInFifo_rv$EN_port0__write =
	     WILL_FIRE_RL_parser_forwardIncomingPacket ||
	     WILL_FIRE_RL_parser_discardIncomingPacket ||
	     WILL_FIRE_RL_parser_receiveFirstPacket ;
  assign parser_rxInFifo_rv$port1__read =
	     parser_rxInFifo_rv$EN_port0__write ?
	       582'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       parser_rxInFifo_rv ;
  assign parser_rxInFifo_rv$EN_port1__write =
	     h2c_axisRx_in_1$EMPTY_N && !parser_rxInFifo_rv$port1__read[581] ;
  assign parser_rxInFifo_rv$port1__write_1 = { 1'd1, h2c_axisRx_in_1$D_OUT } ;
  assign parser_rxInFifo_rv$port2__read =
	     parser_rxInFifo_rv$EN_port1__write ?
	       parser_rxInFifo_rv$port1__write_1 :
	       parser_rxInFifo_rv$port1__read ;
  assign parser_rxOutFifo_rv$port1__read =
	     WILL_FIRE_RL_h2c_bufferReadDataFromNetwork ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       parser_rxOutFifo_rv ;
  assign parser_rxOutFifo_rv$port1__write_1 =
	     { 1'd1,
	       parser_rxInFifo_rv[180:69],
	       parser_rxBufFifo_rv[399:0] } ;
  assign parser_rxOutFifo_rv$port2__read =
	     WILL_FIRE_RL_parser_forwardIncomingPacket ?
	       parser_rxOutFifo_rv$port1__write_1 :
	       parser_rxOutFifo_rv$port1__read ;
  assign parser_rxBufFifo_rv$port1__read =
	     WILL_FIRE_RL_parser_forwardIncomingPacket ?
	       401'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       parser_rxBufFifo_rv ;
  assign parser_rxBufFifo_rv$EN_port1__write =
	     !parser_rxBufFifo_rv$port1__read[400] && parser_rxBufWire$whas ;
  assign parser_rxBufFifo_rv$port1__write_1 =
	     { 1'd1, parser_rxInFifo_rv[580:181] } ;
  assign parser_rxBufFifo_rv$port2__read =
	     parser_rxBufFifo_rv$EN_port1__write ?
	       parser_rxBufFifo_rv$port1__write_1 :
	       parser_rxBufFifo_rv$port1__read ;
  assign parser_txInFifo_rv$EN_port0__write =
	     WILL_FIRE_RL_parser_sendRegularPacket ||
	     WILL_FIRE_RL_parser_sendFirstPacket ;
  assign parser_txInFifo_rv$port1__read =
	     parser_txInFifo_rv$EN_port0__write ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       parser_txInFifo_rv ;
  assign parser_txInFifo_rv$EN_port1__write =
	     WILL_FIRE_RL_c2h_forwardData && c2h_activeWriteFifo$D_OUT[0] ||
	     WILL_FIRE_RL_c2h_genZeroData && c2h_activeWriteFifo$D_OUT[0] ;
  assign parser_txInFifo_rv$port1__write_1 =
	     MUX_parser_txInFifo_rv$port1__write_1__SEL_1 ?
	       MUX_parser_txInFifo_rv$port1__write_1__VAL_1 :
	       513'h100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ;
  assign parser_txInFifo_rv$port2__read =
	     parser_txInFifo_rv$EN_port1__write ?
	       parser_txInFifo_rv$port1__write_1 :
	       parser_txInFifo_rv$port1__read ;
  assign parser_txBufFifo_rv$EN_port0__write =
	     WILL_FIRE_RL_parser_sendLastPacket ||
	     WILL_FIRE_RL_parser_sendRegularPacket ;
  assign parser_txBufFifo_rv$port1__read =
	     parser_txBufFifo_rv$EN_port0__write ?
	       113'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       parser_txBufFifo_rv ;
  assign parser_txBufFifo_rv$EN_port1__write =
	     !parser_txBufFifo_rv$port1__read[112] && parser_txBufWire$whas ;
  assign parser_txBufFifo_rv$port1__write_1 =
	     { 1'd1, parser_txInFifo_rv[511:400] } ;
  assign parser_txBufFifo_rv$port2__read =
	     parser_txBufFifo_rv$EN_port1__write ?
	       parser_txBufFifo_rv$port1__write_1 :
	       parser_txBufFifo_rv$port1__read ;
  assign parser_txOutFifo_rv$EN_port0__write =
	     parser_txOutFifo_rv[581] && c2h_axisTX_out_1$FULL_N ;
  assign parser_txOutFifo_rv$port1__read =
	     parser_txOutFifo_rv$EN_port0__write ?
	       582'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       parser_txOutFifo_rv ;
  assign parser_txOutFifo_rv$EN_port1__write =
	     WILL_FIRE_RL_parser_sendFirstPacket ||
	     WILL_FIRE_RL_parser_sendRegularPacket ||
	     WILL_FIRE_RL_parser_sendLastPacket ;
  always@(WILL_FIRE_RL_parser_sendFirstPacket or
	  MUX_parser_txOutFifo_rv$port1__write_1__VAL_1 or
	  WILL_FIRE_RL_parser_sendRegularPacket or
	  MUX_parser_txOutFifo_rv$port1__write_1__VAL_2 or
	  WILL_FIRE_RL_parser_sendLastPacket or
	  MUX_parser_txOutFifo_rv$port1__write_1__VAL_3)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_parser_sendFirstPacket:
	  parser_txOutFifo_rv$port1__write_1 =
	      MUX_parser_txOutFifo_rv$port1__write_1__VAL_1;
      WILL_FIRE_RL_parser_sendRegularPacket:
	  parser_txOutFifo_rv$port1__write_1 =
	      MUX_parser_txOutFifo_rv$port1__write_1__VAL_2;
      WILL_FIRE_RL_parser_sendLastPacket:
	  parser_txOutFifo_rv$port1__write_1 =
	      MUX_parser_txOutFifo_rv$port1__write_1__VAL_3;
      default: parser_txOutFifo_rv$port1__write_1 =
		   582'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign parser_txOutFifo_rv$port2__read =
	     parser_txOutFifo_rv$EN_port1__write ?
	       parser_txOutFifo_rv$port1__write_1 :
	       parser_txOutFifo_rv$port1__read ;
  assign c2h_dataFifo_rv$port1__read =
	     WILL_FIRE_RL_c2h_forwardData ?
	       513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA :
	       c2h_dataFifo_rv ;
  assign c2h_dataFifo_rv$EN_port1__write =
	     c2h_axiRd_out$EMPTY_N && !c2h_dataFifo_rv$port1__read[512] ;
  assign c2h_dataFifo_rv$port1__write_1 =
	     (c2h_axiRd_out$D_OUT[2:1] == 2'd0) ?
	       { 1'd1, c2h_axiRd_out$D_OUT[514:3] } :
	       513'h100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000 ;
  assign c2h_dataFifo_rv$port2__read =
	     c2h_dataFifo_rv$EN_port1__write ?
	       c2h_dataFifo_rv$port1__write_1 :
	       c2h_dataFifo_rv$port1__read ;
  assign c2h_readError$port1__read =
	     !WILL_FIRE_RL_axiCtrl_axiReadSpecial && c2h_readError ;
  assign c2h_readError$EN_port1__write =
	     c2h_axiRd_out$EMPTY_N && !c2h_dataFifo_rv$port1__read[512] &&
	     c2h_axiRd_out$D_OUT[2:1] != 2'd0 ;
  assign c2h_readError$port2__read =
	     c2h_readError$EN_port1__write || c2h_readError$port1__read ;
  assign c2h_writeError$port1__read =
	     !WILL_FIRE_RL_axiCtrl_axiReadSpecial && c2h_writeError ;
  assign c2h_writeError$EN_port1__write =
	     c2h_axiWr_out$EMPTY_N && c2h_nextRspFifo$EMPTY_N &&
	     c2h_axiWr_out$D_OUT != 2'd0 ;
  assign c2h_writeError$port2__read =
	     c2h_writeError$EN_port1__write || c2h_writeError$port1__read ;
  assign h2c_readError$port1__read =
	     !WILL_FIRE_RL_axiCtrl_axiReadSpecial_3 && h2c_readError ;
  assign h2c_readError$EN_port1__write =
	     WILL_FIRE_RL_h2c_bufferReadDataFromHost &&
	     h2c_axiRd_out$D_OUT[2:1] != 2'd0 ;
  assign h2c_readError$port2__read =
	     h2c_readError$EN_port1__write || h2c_readError$port1__read ;
  assign h2c_writeError$port1__read =
	     !WILL_FIRE_RL_axiCtrl_axiReadSpecial_3 && h2c_writeError ;
  assign h2c_writeError$EN_port1__write =
	     h2c_axiWr_out$EMPTY_N && h2c_nextRspFifo$EMPTY_N &&
	     h2c_axiWr_out$D_OUT != 2'd0 ;
  assign h2c_writeError$port2__read =
	     h2c_writeError$EN_port1__write || h2c_writeError$port1__read ;
  assign axiCtrl_readSlave_in_rv$EN_port0__write =
	     WILL_FIRE_RL_axiCtrl_axiReadFallback ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_6 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_5 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_4 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_3 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_2 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_1 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial ;
  assign axiCtrl_readSlave_in_rv$port1__read =
	     axiCtrl_readSlave_in_rv$EN_port0__write ?
	       16'd10922 :
	       axiCtrl_readSlave_in_rv ;
  assign axiCtrl_readSlave_in_rv$EN_port1__write =
	     !axiCtrl_readSlave_in_rv$port1__read[15] &&
	     !axiCtrl_readSlave_isRst_isInReset &&
	     S_AXI_CTRL_arvalid ;
  assign axiCtrl_readSlave_in_rv$port1__write_1 =
	     { 1'd1, S_AXI_CTRL_araddr, S_AXI_CTRL_arprot } ;
  assign axiCtrl_readSlave_in_rv$port2__read =
	     axiCtrl_readSlave_in_rv$EN_port1__write ?
	       axiCtrl_readSlave_in_rv$port1__write_1 :
	       axiCtrl_readSlave_in_rv$port1__read ;
  assign axiCtrl_readSlave_out_rv$EN_port0__write =
	     axiCtrl_readSlave_out_rv[66] &&
	     !axiCtrl_readSlave_isRst_isInReset &&
	     S_AXI_CTRL_rready ;
  assign axiCtrl_readSlave_out_rv$port1__read =
	     axiCtrl_readSlave_out_rv$EN_port0__write ?
	       67'h2AAAAAAAAAAAAAAAA :
	       axiCtrl_readSlave_out_rv ;
  assign axiCtrl_readSlave_out_rv$EN_port1__write =
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_1 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_2 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_3 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_4 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_5 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 ||
	     WILL_FIRE_RL_axiCtrl_axiReadFallback ||
	     WILL_FIRE_RL_axiCtrl_axiReadSpecial_6 ;
  always@(WILL_FIRE_RL_axiCtrl_axiReadSpecial or
	  MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_1 or
	  WILL_FIRE_RL_axiCtrl_axiReadSpecial_1 or
	  MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_2 or
	  WILL_FIRE_RL_axiCtrl_axiReadSpecial_2 or
	  MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_3 or
	  WILL_FIRE_RL_axiCtrl_axiReadSpecial_3 or
	  MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_4 or
	  WILL_FIRE_RL_axiCtrl_axiReadSpecial_4 or
	  MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_5 or
	  WILL_FIRE_RL_axiCtrl_axiReadSpecial_5 or
	  MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_6 or
	  WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 or
	  MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_7 or
	  WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 or
	  MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_8 or
	  WILL_FIRE_RL_axiCtrl_axiReadFallback or
	  WILL_FIRE_RL_axiCtrl_axiReadSpecial_6)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_axiCtrl_axiReadSpecial:
	  axiCtrl_readSlave_out_rv$port1__write_1 =
	      MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_1;
      WILL_FIRE_RL_axiCtrl_axiReadSpecial_1:
	  axiCtrl_readSlave_out_rv$port1__write_1 =
	      MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_2;
      WILL_FIRE_RL_axiCtrl_axiReadSpecial_2:
	  axiCtrl_readSlave_out_rv$port1__write_1 =
	      MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_3;
      WILL_FIRE_RL_axiCtrl_axiReadSpecial_3:
	  axiCtrl_readSlave_out_rv$port1__write_1 =
	      MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_4;
      WILL_FIRE_RL_axiCtrl_axiReadSpecial_4:
	  axiCtrl_readSlave_out_rv$port1__write_1 =
	      MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_5;
      WILL_FIRE_RL_axiCtrl_axiReadSpecial_5:
	  axiCtrl_readSlave_out_rv$port1__write_1 =
	      MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_6;
      WILL_FIRE_RL_axiCtrl_axiReadSpecial_7:
	  axiCtrl_readSlave_out_rv$port1__write_1 =
	      MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_7;
      WILL_FIRE_RL_axiCtrl_axiReadSpecial_8:
	  axiCtrl_readSlave_out_rv$port1__write_1 =
	      MUX_axiCtrl_readSlave_out_rv$port1__write_1__VAL_8;
      WILL_FIRE_RL_axiCtrl_axiReadFallback:
	  axiCtrl_readSlave_out_rv$port1__write_1 = 67'h40000000000000000;
      WILL_FIRE_RL_axiCtrl_axiReadSpecial_6:
	  axiCtrl_readSlave_out_rv$port1__write_1 = 67'h40000000169BB52B8;
      default: axiCtrl_readSlave_out_rv$port1__write_1 =
		   67'h2AAAAAAAAAAAAAAAA /* unspecified value */ ;
    endcase
  end
  assign axiCtrl_readSlave_out_rv$port2__read =
	     axiCtrl_readSlave_out_rv$EN_port1__write ?
	       axiCtrl_readSlave_out_rv$port1__write_1 :
	       axiCtrl_readSlave_out_rv$port1__read ;
  assign axiCtrl_writeSlave_in_rv$EN_port0__write =
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteFallback ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial ;
  assign axiCtrl_writeSlave_in_rv$port1__read =
	     axiCtrl_writeSlave_in_rv$EN_port0__write ?
	       88'h2AAAAAAAAAAAAAAAAAAAAA :
	       axiCtrl_writeSlave_in_rv ;
  assign axiCtrl_writeSlave_in_rv$EN_port1__write =
	     axiCtrl_writeSlave_addrIn_rv$port1__read[15] &&
	     axiCtrl_writeSlave_dataIn_rv$port1__read[72] &&
	     !axiCtrl_writeSlave_in_rv$port1__read[87] ;
  assign axiCtrl_writeSlave_in_rv$port1__write_1 =
	     { 1'd1,
	       axiCtrl_writeSlave_addrIn_rv$port1__read[14:3],
	       axiCtrl_writeSlave_dataIn_rv$port1__read[71:0],
	       axiCtrl_writeSlave_addrIn_rv$port1__read[2:0] } ;
  assign axiCtrl_writeSlave_in_rv$port2__read =
	     axiCtrl_writeSlave_in_rv$EN_port1__write ?
	       axiCtrl_writeSlave_in_rv$port1__write_1 :
	       axiCtrl_writeSlave_in_rv$port1__read ;
  assign axiCtrl_writeSlave_out_rv$EN_port0__write =
	     axiCtrl_writeSlave_out_rv[2] &&
	     !axiCtrl_writeSlave_isRst_isInReset &&
	     S_AXI_CTRL_bready ;
  assign axiCtrl_writeSlave_out_rv$port1__read =
	     axiCtrl_writeSlave_out_rv$EN_port0__write ?
	       3'd2 :
	       axiCtrl_writeSlave_out_rv ;
  assign axiCtrl_writeSlave_out_rv$EN_port1__write =
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteFallback ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial ;
  assign axiCtrl_writeSlave_out_rv$port2__read =
	     axiCtrl_writeSlave_out_rv$EN_port1__write ?
	       3'd4 :
	       axiCtrl_writeSlave_out_rv$port1__read ;
  assign axiCtrl_writeSlave_addrIn_rv$EN_port0__write =
	     !axiCtrl_writeSlave_addrIn_rv[15] &&
	     !axiCtrl_writeSlave_isRst_isInReset &&
	     S_AXI_CTRL_awvalid ;
  assign axiCtrl_writeSlave_addrIn_rv$port0__write_1 =
	     { 1'd1, S_AXI_CTRL_awaddr, S_AXI_CTRL_awprot } ;
  assign axiCtrl_writeSlave_addrIn_rv$port1__read =
	     axiCtrl_writeSlave_addrIn_rv$EN_port0__write ?
	       axiCtrl_writeSlave_addrIn_rv$port0__write_1 :
	       axiCtrl_writeSlave_addrIn_rv ;
  assign axiCtrl_writeSlave_addrIn_rv$EN_port1__write =
	     axiCtrl_writeSlave_addrIn_rv$port1__read[15] &&
	     axiCtrl_writeSlave_dataIn_rv$port1__read[72] &&
	     !axiCtrl_writeSlave_in_rv$port1__read[87] ;
  assign axiCtrl_writeSlave_addrIn_rv$port2__read =
	     axiCtrl_writeSlave_addrIn_rv$EN_port1__write ?
	       16'd10922 :
	       axiCtrl_writeSlave_addrIn_rv$port1__read ;
  assign axiCtrl_writeSlave_dataIn_rv$EN_port0__write =
	     !axiCtrl_writeSlave_dataIn_rv[72] &&
	     !axiCtrl_writeSlave_isRst_isInReset &&
	     S_AXI_CTRL_wvalid ;
  assign axiCtrl_writeSlave_dataIn_rv$port0__write_1 =
	     { 1'd1, S_AXI_CTRL_wdata, S_AXI_CTRL_wstrb } ;
  assign axiCtrl_writeSlave_dataIn_rv$port1__read =
	     axiCtrl_writeSlave_dataIn_rv$EN_port0__write ?
	       axiCtrl_writeSlave_dataIn_rv$port0__write_1 :
	       axiCtrl_writeSlave_dataIn_rv ;
  assign axiCtrl_writeSlave_dataIn_rv$EN_port1__write =
	     axiCtrl_writeSlave_addrIn_rv$port1__read[15] &&
	     axiCtrl_writeSlave_dataIn_rv$port1__read[72] &&
	     !axiCtrl_writeSlave_in_rv$port1__read[87] ;
  assign axiCtrl_writeSlave_dataIn_rv$port2__read =
	     axiCtrl_writeSlave_dataIn_rv$EN_port1__write ?
	       73'h0AAAAAAAAAAAAAAAAAA :
	       axiCtrl_writeSlave_dataIn_rv$port1__read ;

  // register axiCtrl_readBusy
  assign axiCtrl_readBusy$D_IN = 1'b0 ;
  assign axiCtrl_readBusy$EN = 1'b0 ;

  // register axiCtrl_readSlave_in_rv
  assign axiCtrl_readSlave_in_rv$D_IN = axiCtrl_readSlave_in_rv$port2__read ;
  assign axiCtrl_readSlave_in_rv$EN = 1'b1 ;

  // register axiCtrl_readSlave_isRst_isInReset
  assign axiCtrl_readSlave_isRst_isInReset$D_IN = 1'd0 ;
  assign axiCtrl_readSlave_isRst_isInReset$EN =
	     axiCtrl_readSlave_isRst_isInReset ;

  // register axiCtrl_readSlave_out_rv
  assign axiCtrl_readSlave_out_rv$D_IN =
	     axiCtrl_readSlave_out_rv$port2__read ;
  assign axiCtrl_readSlave_out_rv$EN = 1'b1 ;

  // register axiCtrl_writeBusy
  assign axiCtrl_writeBusy$D_IN = 1'b0 ;
  assign axiCtrl_writeBusy$EN = 1'b0 ;

  // register axiCtrl_writeSlave_addrIn_rv
  assign axiCtrl_writeSlave_addrIn_rv$D_IN =
	     axiCtrl_writeSlave_addrIn_rv$port2__read ;
  assign axiCtrl_writeSlave_addrIn_rv$EN = 1'b1 ;

  // register axiCtrl_writeSlave_dataIn_rv
  assign axiCtrl_writeSlave_dataIn_rv$D_IN =
	     axiCtrl_writeSlave_dataIn_rv$port2__read ;
  assign axiCtrl_writeSlave_dataIn_rv$EN = 1'b1 ;

  // register axiCtrl_writeSlave_in_rv
  assign axiCtrl_writeSlave_in_rv$D_IN =
	     axiCtrl_writeSlave_in_rv$port2__read ;
  assign axiCtrl_writeSlave_in_rv$EN = 1'b1 ;

  // register axiCtrl_writeSlave_isRst_isInReset
  assign axiCtrl_writeSlave_isRst_isInReset$D_IN = 1'd0 ;
  assign axiCtrl_writeSlave_isRst_isInReset$EN =
	     axiCtrl_writeSlave_isRst_isInReset ;

  // register axiCtrl_writeSlave_out_rv
  assign axiCtrl_writeSlave_out_rv$D_IN =
	     axiCtrl_writeSlave_out_rv$port2__read ;
  assign axiCtrl_writeSlave_out_rv$EN = 1'b1 ;

  // register c2hDstAddrReg
  assign c2hDstAddrReg$D_IN =
	     { axiCtrl_writeSlave_in_rv[10] ?
		 axiCtrl_writeSlave_in_rv[74:67] :
		 c2hDstAddrReg[63:56],
	       axiCtrl_writeSlave_in_rv[9] ?
		 axiCtrl_writeSlave_in_rv[66:59] :
		 c2hDstAddrReg[55:48],
	       axiCtrl_writeSlave_in_rv[8] ?
		 axiCtrl_writeSlave_in_rv[58:51] :
		 c2hDstAddrReg[47:40],
	       axiCtrl_writeSlave_in_rv[7] ?
		 axiCtrl_writeSlave_in_rv[50:43] :
		 c2hDstAddrReg[39:32],
	       axiCtrl_writeSlave_in_rv[6] ?
		 axiCtrl_writeSlave_in_rv[42:35] :
		 c2hDstAddrReg[31:24],
	       axiCtrl_writeSlave_in_rv[5] ?
		 axiCtrl_writeSlave_in_rv[34:27] :
		 c2hDstAddrReg[23:16],
	       axiCtrl_writeSlave_in_rv[4] ?
		 axiCtrl_writeSlave_in_rv[26:19] :
		 c2hDstAddrReg[15:8],
	       axiCtrl_writeSlave_in_rv[3] ?
		 axiCtrl_writeSlave_in_rv[18:11] :
		 c2hDstAddrReg[7:0] } ;
  assign c2hDstAddrReg$EN = WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 ;

  // register c2hIntrEnReg
  assign c2hIntrEnReg$D_IN = axiCtrl_writeSlave_in_rv[16] ;
  assign c2hIntrEnReg$EN =
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial &&
	     axiCtrl_writeSlave_in_rv[3] &&
	     (axiCtrl_writeSlave_in_rv[16] || axiCtrl_writeSlave_in_rv[17]) ;

  // register c2hSrcAddrReg
  assign c2hSrcAddrReg$D_IN =
	     { axiCtrl_writeSlave_in_rv[6] ?
		 axiCtrl_writeSlave_in_rv[42:35] :
		 c2hSrcAddrReg[31:24],
	       axiCtrl_writeSlave_in_rv[5] ?
		 axiCtrl_writeSlave_in_rv[34:27] :
		 c2hSrcAddrReg[23:16],
	       axiCtrl_writeSlave_in_rv[4] ?
		 axiCtrl_writeSlave_in_rv[26:19] :
		 c2hSrcAddrReg[15:8],
	       axiCtrl_writeSlave_in_rv[3] ?
		 axiCtrl_writeSlave_in_rv[18:11] :
		 c2hSrcAddrReg[7:0] } ;
  assign c2hSrcAddrReg$EN = WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 ;

  // register c2hStatus
  assign c2hStatus$D_IN = MUX_c2hStatus$write_1__SEL_1 ;
  assign c2hStatus$EN =
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	     IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801[7] ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial &&
	     axiCtrl_writeSlave_in_rv[3] &&
	     axiCtrl_writeSlave_in_rv[12] &&
	     c2hStatus &&
	     NOT_c2h_nextCmdFifo_notEmpty__06_24_AND_NOT_c2_ETC___d630 ;

  // register c2h_axiRd_isRst_isInReset
  assign c2h_axiRd_isRst_isInReset$D_IN = 1'd0 ;
  assign c2h_axiRd_isRst_isInReset$EN = c2h_axiRd_isRst_isInReset ;

  // register c2h_axiWr_isRst_isInReset
  assign c2h_axiWr_isRst_isInReset$D_IN = 1'd0 ;
  assign c2h_axiWr_isRst_isInReset$EN = c2h_axiWr_isRst_isInReset ;

  // register c2h_axisTX_isRst_isInReset
  assign c2h_axisTX_isRst_isInReset$D_IN = 1'd0 ;
  assign c2h_axisTX_isRst_isInReset$EN = c2h_axisTX_isRst_isInReset ;

  // register c2h_dataCnt
  assign c2h_dataCnt$D_IN =
	     (c2h_dataCnt == 7'd63) ? 7'd0 : c2h_dataCnt + 7'd1 ;
  assign c2h_dataCnt$EN =
	     WILL_FIRE_RL_c2h_genZeroData || WILL_FIRE_RL_c2h_forwardData ;

  // register c2h_dataFifo_rv
  assign c2h_dataFifo_rv$D_IN = c2h_dataFifo_rv$port2__read ;
  assign c2h_dataFifo_rv$EN = 1'b1 ;

  // register c2h_pageCnt
  assign c2h_pageCnt$D_IN =
	     c2h_pageCnt_24_PLUS_1_34_EQ_c2h_nextCmdFifo_fi_ETC___d236 ?
	       13'd0 :
	       c2h_pageCnt_24_PLUS_1___d234 ;
  assign c2h_pageCnt$EN = WILL_FIRE_RL_c2h_issueRead ;

  // register c2h_readError
  assign c2h_readError$D_IN = c2h_readError$port2__read ;
  assign c2h_readError$EN = 1'b1 ;

  // register c2h_writeError
  assign c2h_writeError$D_IN = c2h_writeError$port2__read ;
  assign c2h_writeError$EN = 1'b1 ;

  // register dstMac
  assign dstMac$D_IN =
	     { axiCtrl_writeSlave_in_rv[8] ?
		 axiCtrl_writeSlave_in_rv[58:51] :
		 dstMac[47:40],
	       axiCtrl_writeSlave_in_rv[7] ?
		 axiCtrl_writeSlave_in_rv[50:43] :
		 dstMac[39:32],
	       axiCtrl_writeSlave_in_rv[6] ?
		 axiCtrl_writeSlave_in_rv[42:35] :
		 dstMac[31:24],
	       axiCtrl_writeSlave_in_rv[5] ?
		 axiCtrl_writeSlave_in_rv[34:27] :
		 dstMac[23:16],
	       axiCtrl_writeSlave_in_rv[4] ?
		 axiCtrl_writeSlave_in_rv[26:19] :
		 dstMac[15:8],
	       axiCtrl_writeSlave_in_rv[3] ?
		 axiCtrl_writeSlave_in_rv[18:11] :
		 dstMac[7:0] } ;
  assign dstMac$EN = WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 ;

  // register h2cDstAddrReg
  assign h2cDstAddrReg$D_IN =
	     { axiCtrl_writeSlave_in_rv[6] ?
		 axiCtrl_writeSlave_in_rv[42:35] :
		 h2cDstAddrReg[31:24],
	       axiCtrl_writeSlave_in_rv[5] ?
		 axiCtrl_writeSlave_in_rv[34:27] :
		 h2cDstAddrReg[23:16],
	       axiCtrl_writeSlave_in_rv[4] ?
		 axiCtrl_writeSlave_in_rv[26:19] :
		 h2cDstAddrReg[15:8],
	       axiCtrl_writeSlave_in_rv[3] ?
		 axiCtrl_writeSlave_in_rv[18:11] :
		 h2cDstAddrReg[7:0] } ;
  assign h2cDstAddrReg$EN = WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 ;

  // register h2cIntrEnReg
  assign h2cIntrEnReg$D_IN = axiCtrl_writeSlave_in_rv[16] ;
  assign h2cIntrEnReg$EN =
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	     axiCtrl_writeSlave_in_rv[3] &&
	     (axiCtrl_writeSlave_in_rv[16] || axiCtrl_writeSlave_in_rv[17]) ;

  // register h2cSrcAddrReg
  assign h2cSrcAddrReg$D_IN =
	     { axiCtrl_writeSlave_in_rv[10] ?
		 axiCtrl_writeSlave_in_rv[74:67] :
		 h2cSrcAddrReg[63:56],
	       axiCtrl_writeSlave_in_rv[9] ?
		 axiCtrl_writeSlave_in_rv[66:59] :
		 h2cSrcAddrReg[55:48],
	       axiCtrl_writeSlave_in_rv[8] ?
		 axiCtrl_writeSlave_in_rv[58:51] :
		 h2cSrcAddrReg[47:40],
	       axiCtrl_writeSlave_in_rv[7] ?
		 axiCtrl_writeSlave_in_rv[50:43] :
		 h2cSrcAddrReg[39:32],
	       axiCtrl_writeSlave_in_rv[6] ?
		 axiCtrl_writeSlave_in_rv[42:35] :
		 h2cSrcAddrReg[31:24],
	       axiCtrl_writeSlave_in_rv[5] ?
		 axiCtrl_writeSlave_in_rv[34:27] :
		 h2cSrcAddrReg[23:16],
	       axiCtrl_writeSlave_in_rv[4] ?
		 axiCtrl_writeSlave_in_rv[26:19] :
		 h2cSrcAddrReg[15:8],
	       axiCtrl_writeSlave_in_rv[3] ?
		 axiCtrl_writeSlave_in_rv[18:11] :
		 h2cSrcAddrReg[7:0] } ;
  assign h2cSrcAddrReg$EN = WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 ;

  // register h2cStatus
  assign h2cStatus$D_IN = MUX_h2cStatus$write_1__SEL_1 ;
  assign h2cStatus$EN =
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	     IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801[7] ||
	     WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	     axiCtrl_writeSlave_in_rv[3] &&
	     axiCtrl_writeSlave_in_rv[12] &&
	     h2cStatus &&
	     NOT_h2c_nextCmdFifo_notEmpty__53_71_AND_NOT_h2_ETC___d677 ;

  // register h2c_axiRd_isRst_isInReset
  assign h2c_axiRd_isRst_isInReset$D_IN = 1'd0 ;
  assign h2c_axiRd_isRst_isInReset$EN = h2c_axiRd_isRst_isInReset ;

  // register h2c_axiWr_isRst_isInReset
  assign h2c_axiWr_isRst_isInReset$D_IN = 1'd0 ;
  assign h2c_axiWr_isRst_isInReset$EN = h2c_axiWr_isRst_isInReset ;

  // register h2c_axisRx_isRst_isInReset
  assign h2c_axisRx_isRst_isInReset$D_IN = 1'd0 ;
  assign h2c_axisRx_isRst_isInReset$EN = h2c_axisRx_isRst_isInReset ;

  // register h2c_dataCnt
  assign h2c_dataCnt$D_IN =
	     (h2c_dataCnt == 7'd63) ? 7'd0 : h2c_dataCnt + 7'd1 ;
  assign h2c_dataCnt$EN =
	     WILL_FIRE_RL_h2c_genZeroData || WILL_FIRE_RL_h2c_forwardData ;

  // register h2c_dataFifo_rCache
  assign h2c_dataFifo_rCache$D_IN =
	     { 1'd1, h2c_dataFifo_rWrPtr, x3__h19464 } ;
  assign h2c_dataFifo_rCache$EN = h2c_dataFifo_pwEnqueue$whas ;

  // register h2c_dataFifo_rRdPtr
  assign h2c_dataFifo_rRdPtr$D_IN = x__h19622 ;
  assign h2c_dataFifo_rRdPtr$EN = WILL_FIRE_RL_h2c_forwardData ;

  // register h2c_dataFifo_rWrPtr
  assign h2c_dataFifo_rWrPtr$D_IN = x__h19533 ;
  assign h2c_dataFifo_rWrPtr$EN = h2c_dataFifo_pwEnqueue$whas ;

  // register h2c_pageCnt
  assign h2c_pageCnt$D_IN =
	     h2c_pageCnt_52_PLUS_1_62_EQ_h2c_nextCmdFifo_fi_ETC___d464 ?
	       13'd0 :
	       h2c_pageCnt_52_PLUS_1___d462 ;
  assign h2c_pageCnt$EN = WILL_FIRE_RL_h2c_issueRead ;

  // register h2c_readError
  assign h2c_readError$D_IN = h2c_readError$port2__read ;
  assign h2c_readError$EN = 1'b1 ;

  // register h2c_recCnt
  assign h2c_recCnt$D_IN = h2c_recCnt + 6'd1 ;
  assign h2c_recCnt$EN = WILL_FIRE_RL_h2c_bufferReadDataFromNetwork ;

  // register h2c_writeError
  assign h2c_writeError$D_IN = h2c_writeError$port2__read ;
  assign h2c_writeError$EN = 1'b1 ;

  // register parser_recState
  assign parser_recState$D_IN =
	     MUX_parser_recState$write_1__SEL_1 ?
	       2'd0 :
	       MUX_parser_recState$write_1__VAL_2 ;
  assign parser_recState$EN =
	     (WILL_FIRE_RL_parser_forwardIncomingPacket ||
	      WILL_FIRE_RL_parser_discardIncomingPacket) &&
	     parser_rxInFifo_rv[0] ||
	     WILL_FIRE_RL_parser_receiveFirstPacket ;

  // register parser_rxBufFifo_rv
  assign parser_rxBufFifo_rv$D_IN = parser_rxBufFifo_rv$port2__read ;
  assign parser_rxBufFifo_rv$EN = 1'b1 ;

  // register parser_rxInFifo_rv
  assign parser_rxInFifo_rv$D_IN = parser_rxInFifo_rv$port2__read ;
  assign parser_rxInFifo_rv$EN = 1'b1 ;

  // register parser_rxOutFifo_rv
  assign parser_rxOutFifo_rv$D_IN = parser_rxOutFifo_rv$port2__read ;
  assign parser_rxOutFifo_rv$EN = 1'b1 ;

  // register parser_txBufFifo_rv
  assign parser_txBufFifo_rv$D_IN = parser_txBufFifo_rv$port2__read ;
  assign parser_txBufFifo_rv$EN = 1'b1 ;

  // register parser_txCnt
  always@(WILL_FIRE_RL_parser_sendRegularPacket or
	  MUX_parser_txCnt$write_1__VAL_1 or
	  WILL_FIRE_RL_parser_sendLastPacket or
	  WILL_FIRE_RL_parser_sendFirstPacket)
  begin
    case (1'b1) // synopsys parallel_case
      WILL_FIRE_RL_parser_sendRegularPacket:
	  parser_txCnt$D_IN = MUX_parser_txCnt$write_1__VAL_1;
      WILL_FIRE_RL_parser_sendLastPacket: parser_txCnt$D_IN = 5'd0;
      WILL_FIRE_RL_parser_sendFirstPacket: parser_txCnt$D_IN = 5'd1;
      default: parser_txCnt$D_IN = 5'b01010 /* unspecified value */ ;
    endcase
  end
  assign parser_txCnt$EN =
	     WILL_FIRE_RL_parser_sendRegularPacket ||
	     WILL_FIRE_RL_parser_sendLastPacket ||
	     WILL_FIRE_RL_parser_sendFirstPacket ;

  // register parser_txInFifo_rv
  assign parser_txInFifo_rv$D_IN = parser_txInFifo_rv$port2__read ;
  assign parser_txInFifo_rv$EN = 1'b1 ;

  // register parser_txOutFifo_rv
  assign parser_txOutFifo_rv$D_IN = parser_txOutFifo_rv$port2__read ;
  assign parser_txOutFifo_rv$EN = 1'b1 ;

  // submodule c2h_activeWriteFifo
  assign c2h_activeWriteFifo$D_IN = c2h_nextWriteFifo$D_OUT[1:0] ;
  assign c2h_activeWriteFifo$ENQ =
	     WILL_FIRE_RL_c2h_issueWrite &&
	     (c2h_nextWriteFifo$D_OUT[1] || c2h_dataFifo_rv[512]) ;
  assign c2h_activeWriteFifo$DEQ =
	     _dor1c2h_activeWriteFifo$EN_deq && c2h_dataCnt == 7'd63 ;
  assign c2h_activeWriteFifo$CLR = 1'b0 ;

  // submodule c2h_axiRd_in
  assign c2h_axiRd_in$D_IN = { x_addr__h12431, 29'd133758976 } ;
  assign c2h_axiRd_in$ENQ =
	     WILL_FIRE_RL_c2h_issueRead && !c2h_nextCmdFifo$D_OUT[1] ;
  assign c2h_axiRd_in$DEQ =
	     c2h_axiRd_in$EMPTY_N && !c2h_axiRd_isRst_isInReset &&
	     M_AXI_MEM_arready ;
  assign c2h_axiRd_in$CLR = 1'b0 ;

  // submodule c2h_axiRd_out
  assign c2h_axiRd_out$D_IN = c2h_axiRd_rinpkg$wget ;
  assign c2h_axiRd_out$ENQ =
	     c2h_axiRd_out$FULL_N && !c2h_axiRd_isRst_isInReset &&
	     M_AXI_MEM_rvalid ;
  assign c2h_axiRd_out$DEQ =
	     c2h_axiRd_out$EMPTY_N && !c2h_dataFifo_rv$port1__read[512] ;
  assign c2h_axiRd_out$CLR = 1'b0 ;

  // submodule c2h_axiWr_in_addr
  assign c2h_axiWr_in_addr$D_IN = { x_addr__h12961, 29'd133758976 } ;
  assign c2h_axiWr_in_addr$ENQ =
	     WILL_FIRE_RL_c2h_issueWrite &&
	     (c2h_nextWriteFifo$D_OUT[1] || c2h_dataFifo_rv[512]) &&
	     !c2h_nextWriteFifo$D_OUT[0] ;
  assign c2h_axiWr_in_addr$DEQ =
	     c2h_axiWr_in_addr$EMPTY_N && !c2h_axiWr_isRst_isInReset &&
	     M_AXI_PCI_awready ;
  assign c2h_axiWr_in_addr$CLR = 1'b0 ;

  // submodule c2h_axiWr_in_data
  assign c2h_axiWr_in_data$D_IN =
	     MUX_c2h_axiWr_in_data$enq_1__SEL_1 ?
	       MUX_c2h_axiWr_in_data$enq_1__VAL_1 :
	       MUX_c2h_axiWr_in_data$enq_1__VAL_2 ;
  assign c2h_axiWr_in_data$ENQ =
	     WILL_FIRE_RL_c2h_forwardData && !c2h_activeWriteFifo$D_OUT[0] ||
	     WILL_FIRE_RL_c2h_genZeroData && !c2h_activeWriteFifo$D_OUT[0] ;
  assign c2h_axiWr_in_data$DEQ =
	     c2h_axiWr_in_data$EMPTY_N && !c2h_axiWr_isRst_isInReset &&
	     M_AXI_PCI_wready ;
  assign c2h_axiWr_in_data$CLR = 1'b0 ;

  // submodule c2h_axiWr_out
  assign c2h_axiWr_out$D_IN = M_AXI_PCI_bresp ;
  assign c2h_axiWr_out$ENQ =
	     c2h_axiWr_out$FULL_N && !c2h_axiWr_isRst_isInReset &&
	     M_AXI_PCI_bvalid ;
  assign c2h_axiWr_out$DEQ =
	     c2h_axiWr_out$EMPTY_N && c2h_nextRspFifo$EMPTY_N ;
  assign c2h_axiWr_out$CLR = 1'b0 ;

  // submodule c2h_axisTX_out
  assign c2h_axisTX_out$D_IN = 581'h0 ;
  assign c2h_axisTX_out$ENQ = 1'b0 ;
  assign c2h_axisTX_out$DEQ = 1'b0 ;
  assign c2h_axisTX_out$CLR = 1'b0 ;

  // submodule c2h_axisTX_out_1
  assign c2h_axisTX_out_1$D_IN = parser_txOutFifo_rv[580:0] ;
  assign c2h_axisTX_out_1$ENQ =
	     parser_txOutFifo_rv[581] && c2h_axisTX_out_1$FULL_N ;
  assign c2h_axisTX_out_1$DEQ =
	     c2h_axisTX_out_1$EMPTY_N && !c2h_axisTX_isRst_isInReset &&
	     AXIS_NETWORK_TX_tready ;
  assign c2h_axisTX_out_1$CLR = 1'b0 ;

  // submodule c2h_nextCmdFifo
  assign c2h_nextCmdFifo$D_IN =
	     { c2hSrcAddrReg[31:12],
	       c2hDstAddrReg[63:12],
	       IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d808,
	       1'd0,
	       IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801[4] } ;
  assign c2h_nextCmdFifo$ENQ = MUX_c2hStatus$write_1__SEL_1 ;
  assign c2h_nextCmdFifo$DEQ =
	     WILL_FIRE_RL_c2h_issueRead &&
	     c2h_pageCnt_24_PLUS_1_34_EQ_c2h_nextCmdFifo_fi_ETC___d236 ;
  assign c2h_nextCmdFifo$CLR = 1'b0 ;

  // submodule c2h_nextRspFifo
  assign c2h_nextRspFifo$ENQ =
	     _dor1c2h_nextRspFifo$EN_enq && c2h_dataCnt == 7'd63 &&
	     !c2h_activeWriteFifo$D_OUT[0] ;
  assign c2h_nextRspFifo$DEQ =
	     c2h_axiWr_out$EMPTY_N && c2h_nextRspFifo$EMPTY_N ;
  assign c2h_nextRspFifo$CLR = 1'b0 ;

  // submodule c2h_nextWriteFifo
  assign c2h_nextWriteFifo$D_IN =
	     { x_dstPfn__h12537, c2h_nextCmdFifo$D_OUT[1:0] } ;
  assign c2h_nextWriteFifo$ENQ = WILL_FIRE_RL_c2h_issueRead ;
  assign c2h_nextWriteFifo$DEQ =
	     WILL_FIRE_RL_c2h_issueWrite &&
	     (c2h_nextWriteFifo$D_OUT[1] || c2h_dataFifo_rv[512]) ;
  assign c2h_nextWriteFifo$CLR = 1'b0 ;

  // submodule h2c_activeWriteFifo
  assign h2c_activeWriteFifo$D_IN = h2c_nextWriteFifo$D_OUT[1] ;
  assign h2c_activeWriteFifo$ENQ =
	     WILL_FIRE_RL_h2c_issueWrite &&
	     (h2c_nextWriteFifo$D_OUT[1] ||
	      NOT_h2c_dataFifo_rRdPtr_read__24_EQ_h2c_dataFi_ETC___d500) ;
  assign h2c_activeWriteFifo$DEQ =
	     _dor1h2c_activeWriteFifo$EN_deq && h2c_dataCnt == 7'd63 ;
  assign h2c_activeWriteFifo$CLR = 1'b0 ;

  // submodule h2c_axiRd_in
  assign h2c_axiRd_in$D_IN = { x_addr__h20215, 29'd133758976 } ;
  assign h2c_axiRd_in$ENQ =
	     WILL_FIRE_RL_h2c_issueRead && !h2c_nextCmdFifo$D_OUT[0] &&
	     !h2c_nextCmdFifo$D_OUT[1] ;
  assign h2c_axiRd_in$DEQ =
	     h2c_axiRd_in$EMPTY_N && !h2c_axiRd_isRst_isInReset &&
	     M_AXI_PCI_arready ;
  assign h2c_axiRd_in$CLR = 1'b0 ;

  // submodule h2c_axiRd_out
  assign h2c_axiRd_out$D_IN = h2c_axiRd_rinpkg$wget ;
  assign h2c_axiRd_out$ENQ =
	     h2c_axiRd_out$FULL_N && !h2c_axiRd_isRst_isInReset &&
	     M_AXI_PCI_rvalid ;
  assign h2c_axiRd_out$DEQ = WILL_FIRE_RL_h2c_bufferReadDataFromHost ;
  assign h2c_axiRd_out$CLR = 1'b0 ;

  // submodule h2c_axiWr_in_addr
  assign h2c_axiWr_in_addr$D_IN = { x_addr__h20953, 29'd133758976 } ;
  assign h2c_axiWr_in_addr$ENQ =
	     WILL_FIRE_RL_h2c_issueWrite &&
	     (h2c_nextWriteFifo$D_OUT[1] ||
	      NOT_h2c_dataFifo_rRdPtr_read__24_EQ_h2c_dataFi_ETC___d500) ;
  assign h2c_axiWr_in_addr$DEQ =
	     h2c_axiWr_in_addr$EMPTY_N && !h2c_axiWr_isRst_isInReset &&
	     M_AXI_MEM_awready ;
  assign h2c_axiWr_in_addr$CLR = 1'b0 ;

  // submodule h2c_axiWr_in_data
  assign h2c_axiWr_in_data$D_IN =
	     WILL_FIRE_RL_h2c_forwardData ?
	       MUX_h2c_axiWr_in_data$enq_1__VAL_1 :
	       MUX_h2c_axiWr_in_data$enq_1__VAL_2 ;
  assign h2c_axiWr_in_data$ENQ =
	     WILL_FIRE_RL_h2c_forwardData || WILL_FIRE_RL_h2c_genZeroData ;
  assign h2c_axiWr_in_data$DEQ =
	     h2c_axiWr_in_data$EMPTY_N && !h2c_axiWr_isRst_isInReset &&
	     M_AXI_MEM_wready ;
  assign h2c_axiWr_in_data$CLR = 1'b0 ;

  // submodule h2c_axiWr_out
  assign h2c_axiWr_out$D_IN = M_AXI_MEM_bresp ;
  assign h2c_axiWr_out$ENQ =
	     h2c_axiWr_out$FULL_N && !h2c_axiWr_isRst_isInReset &&
	     M_AXI_MEM_bvalid ;
  assign h2c_axiWr_out$DEQ =
	     h2c_axiWr_out$EMPTY_N && h2c_nextRspFifo$EMPTY_N ;
  assign h2c_axiWr_out$CLR = 1'b0 ;

  // submodule h2c_axisRx_in
  assign h2c_axisRx_in$D_IN = 581'h0 ;
  assign h2c_axisRx_in$ENQ = 1'b0 ;
  assign h2c_axisRx_in$DEQ = 1'b0 ;
  assign h2c_axisRx_in$CLR = 1'b0 ;

  // submodule h2c_axisRx_in_1
  assign h2c_axisRx_in_1$D_IN =
	     { AXIS_NETWORK_RX_tdata,
	       AXIS_NETWORK_RX_tkeep,
	       AXIS_NETWORK_RX_tDest,
	       AXIS_NETWORK_RX_tlast } ;
  assign h2c_axisRx_in_1$ENQ =
	     h2c_axisRx_in_1$FULL_N && !h2c_axisRx_isRst_isInReset &&
	     AXIS_NETWORK_RX_tvalid ;
  assign h2c_axisRx_in_1$DEQ =
	     h2c_axisRx_in_1$EMPTY_N && !parser_rxInFifo_rv$port1__read[581] ;
  assign h2c_axisRx_in_1$CLR = 1'b0 ;

  // submodule h2c_dataFifo_memory
  assign h2c_dataFifo_memory$ADDRA = h2c_dataFifo_rWrPtr[8:0] ;
  assign h2c_dataFifo_memory$ADDRB =
	     WILL_FIRE_RL_h2c_forwardData ?
	       x__h19622[8:0] :
	       h2c_dataFifo_rRdPtr[8:0] ;
  assign h2c_dataFifo_memory$DIA = x3__h19464 ;
  assign h2c_dataFifo_memory$DIB =
	     512'hAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA /* unspecified value */  ;
  assign h2c_dataFifo_memory$WEA = h2c_dataFifo_pwEnqueue$whas ;
  assign h2c_dataFifo_memory$WEB = 1'd0 ;
  assign h2c_dataFifo_memory$ENA = 1'b1 ;
  assign h2c_dataFifo_memory$ENB = 1'b1 ;

  // submodule h2c_isNetworkTransferFifo
  assign h2c_isNetworkTransferFifo$D_IN = h2c_nextCmdFifo$D_OUT[0] ;
  assign h2c_isNetworkTransferFifo$ENQ =
	     WILL_FIRE_RL_h2c_issueRead && !h2c_nextCmdFifo$D_OUT[1] ;
  assign h2c_isNetworkTransferFifo$DEQ =
	     WILL_FIRE_RL_h2c_bufferReadDataFromHost &&
	     h2c_axiRd_out$D_OUT[0] ||
	     WILL_FIRE_RL_h2c_bufferReadDataFromNetwork &&
	     h2c_recCnt == 6'd63 ;
  assign h2c_isNetworkTransferFifo$CLR = 1'b0 ;

  // submodule h2c_nextCmdFifo
  assign h2c_nextCmdFifo$D_IN =
	     { h2cSrcAddrReg[63:12],
	       h2cDstAddrReg[31:12],
	       IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d808,
	       IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801[6],
	       IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801[4] } ;
  assign h2c_nextCmdFifo$ENQ = MUX_h2cStatus$write_1__SEL_1 ;
  assign h2c_nextCmdFifo$DEQ =
	     WILL_FIRE_RL_h2c_issueRead &&
	     h2c_pageCnt_52_PLUS_1_62_EQ_h2c_nextCmdFifo_fi_ETC___d464 ;
  assign h2c_nextCmdFifo$CLR = 1'b0 ;

  // submodule h2c_nextRspFifo
  assign h2c_nextRspFifo$ENQ =
	     _dor1h2c_nextRspFifo$EN_enq && h2c_dataCnt == 7'd63 ;
  assign h2c_nextRspFifo$DEQ =
	     h2c_axiWr_out$EMPTY_N && h2c_nextRspFifo$EMPTY_N ;
  assign h2c_nextRspFifo$CLR = 1'b0 ;

  // submodule h2c_nextWriteFifo
  assign h2c_nextWriteFifo$D_IN =
	     { x_dstPfn__h20321, h2c_nextCmdFifo$D_OUT[1:0] } ;
  assign h2c_nextWriteFifo$ENQ = WILL_FIRE_RL_h2c_issueRead ;
  assign h2c_nextWriteFifo$DEQ =
	     WILL_FIRE_RL_h2c_issueWrite &&
	     (h2c_nextWriteFifo$D_OUT[1] ||
	      NOT_h2c_dataFifo_rRdPtr_read__24_EQ_h2c_dataFi_ETC___d500) ;
  assign h2c_nextWriteFifo$CLR = 1'b0 ;

  // remaining internal signals
  assign IF_axiCtrl_writeSlave_in_rv_BIT_4_THEN_axiCtrl_ETC__q1 =
	     axiCtrl_writeSlave_in_rv[4] ?
	       axiCtrl_writeSlave_in_rv[26:19] :
	       8'd0 ;
  assign IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801 =
	     axiCtrl_writeSlave_in_rv[10] ?
	       axiCtrl_writeSlave_in_rv[74:67] :
	       8'd0 ;
  assign IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d808 =
	     { IF_axiCtrl_writeSlave_in_rv_BIT_4_THEN_axiCtrl_ETC__q1[4:0],
	       axiCtrl_writeSlave_in_rv[3] ?
		 axiCtrl_writeSlave_in_rv[18:11] :
		 8'd0 } ;
  assign IF_c2h_nextCmdFifo_notEmpty__06_OR_c2h_nextWri_ETC___d613 =
	     (c2h_nextCmdFifo$EMPTY_N || c2h_nextWriteFifo$EMPTY_N ||
	      c2h_activeWriteFifo$EMPTY_N ||
	      c2h_nextRspFifo$EMPTY_N) ?
	       64'd1 :
	       64'd0 ;
  assign IF_h2c_nextCmdFifo_notEmpty__53_OR_h2c_nextWri_ETC___d660 =
	     (h2c_nextCmdFifo$EMPTY_N || h2c_nextWriteFifo$EMPTY_N ||
	      h2c_activeWriteFifo$EMPTY_N ||
	      h2c_nextRspFifo$EMPTY_N) ?
	       64'd1 :
	       64'd0 ;
  assign NOT_c2h_nextCmdFifo_notEmpty__06_24_AND_NOT_c2_ETC___d630 =
	     !c2h_nextCmdFifo$EMPTY_N && !c2h_nextWriteFifo$EMPTY_N &&
	     !c2h_activeWriteFifo$EMPTY_N &&
	     !c2h_nextRspFifo$EMPTY_N ;
  assign NOT_h2c_dataFifo_rRdPtr_read__24_EQ_h2c_dataFi_ETC___d500 =
	     h2c_dataFifo_rRdPtr != h2c_dataFifo_rWrPtr ;
  assign NOT_h2c_dataFifo_rRdPtr_read__24_PLUS_256_66_E_ETC___d468 =
	     h2c_dataFifo_rRdPtr + 10'd256 != h2c_dataFifo_rWrPtr ;
  assign NOT_h2c_nextCmdFifo_notEmpty__53_71_AND_NOT_h2_ETC___d677 =
	     !h2c_nextCmdFifo$EMPTY_N && !h2c_nextWriteFifo$EMPTY_N &&
	     !h2c_activeWriteFifo$EMPTY_N &&
	     !h2c_nextRspFifo$EMPTY_N ;
  assign _dor1c2h_activeWriteFifo$EN_deq =
	     WILL_FIRE_RL_c2h_genZeroData || WILL_FIRE_RL_c2h_forwardData ;
  assign _dor1c2h_nextRspFifo$EN_enq =
	     WILL_FIRE_RL_c2h_genZeroData || WILL_FIRE_RL_c2h_forwardData ;
  assign _dor1h2c_activeWriteFifo$EN_deq =
	     WILL_FIRE_RL_h2c_genZeroData || WILL_FIRE_RL_h2c_forwardData ;
  assign _dor1h2c_nextRspFifo$EN_enq =
	     WILL_FIRE_RL_h2c_genZeroData || WILL_FIRE_RL_h2c_forwardData ;
  assign c2h_activeWriteFifo_i_notEmpty__67_AND_NOT_par_ETC___d275 =
	     c2h_activeWriteFifo$EMPTY_N &&
	     !parser_txInFifo_rv$port1__read[512] &&
	     c2h_axiWr_in_data$FULL_N &&
	     c2h_nextRspFifo$FULL_N ;
  assign c2h_pageCnt_24_PLUS_1_34_EQ_c2h_nextCmdFifo_fi_ETC___d236 =
	     c2h_pageCnt_24_PLUS_1___d234 == c2h_nextCmdFifo$D_OUT[14:2] ;
  assign c2h_pageCnt_24_PLUS_1___d234 = c2h_pageCnt + 13'd1 ;
  assign h2c_pageCnt_52_PLUS_1_62_EQ_h2c_nextCmdFifo_fi_ETC___d464 =
	     h2c_pageCnt_52_PLUS_1___d462 == h2c_nextCmdFifo$D_OUT[14:2] ;
  assign h2c_pageCnt_52_PLUS_1___d462 = h2c_pageCnt + 13'd1 ;
  assign header_dstMac__h1000 =
	     { parser_rxInFifo_rv[76:69],
	       parser_rxInFifo_rv[84:77],
	       parser_rxInFifo_rv[92:85],
	       parser_rxInFifo_rv[100:93],
	       parser_rxInFifo_rv[108:101],
	       parser_rxInFifo_rv[116:109] } ;
  assign header_pktLen__h998 =
	     { parser_rxInFifo_rv[172:165], parser_rxInFifo_rv[180:173] } ;
  assign out__h3630 =
	     { parser_txInFifo_rv[399:0], 16'd4, x__h4105, x__h5048 } ;
  assign out__h6189 =
	     { parser_txInFifo_rv[399:0], parser_txBufFifo_rv[111:0] } ;
  assign out__h6417 = { 400'd0, parser_txBufFifo_rv[111:0] } ;
  assign parser_rxInFifo_rv_port0__read_BITS_18_TO_5_EQ_ETC___d24 =
	     parser_rxInFifo_rv[18:5] == 14'h3FFF &&
	     header_dstMac__h1000 == mac_addr &&
	     header_pktLen__h998 == 16'd1024 ;
  assign pfn__h12482 = c2h_nextCmdFifo$D_OUT[86:67] + { 7'd0, c2h_pageCnt } ;
  assign pfn__h20266 = h2c_nextCmdFifo$D_OUT[86:35] + { 39'd0, h2c_pageCnt } ;
  assign v__h27206 =
	     { IF_c2h_nextCmdFifo_notEmpty__06_OR_c2h_nextWri_ETC___d613[63:8],
	       !c2h_nextCmdFifo$FULL_N,
	       IF_c2h_nextCmdFifo_notEmpty__06_OR_c2h_nextWri_ETC___d613[6:5],
	       c2hIntrEnReg,
	       v__h27215,
	       c2hStatus &&
	       NOT_c2h_nextCmdFifo_notEmpty__06_24_AND_NOT_c2_ETC___d630,
	       IF_c2h_nextCmdFifo_notEmpty__06_OR_c2h_nextWri_ETC___d613[0] } ;
  assign v__h27215 = { c2h_writeError, c2h_readError } ;
  assign v__h27700 = { 32'd0, c2hSrcAddrReg } ;
  assign v__h28010 =
	     { IF_h2c_nextCmdFifo_notEmpty__53_OR_h2c_nextWri_ETC___d660[63:8],
	       !h2c_nextCmdFifo$FULL_N,
	       IF_h2c_nextCmdFifo_notEmpty__53_OR_h2c_nextWri_ETC___d660[6:5],
	       h2cIntrEnReg,
	       v__h28019,
	       h2cStatus &&
	       NOT_h2c_nextCmdFifo_notEmpty__53_71_AND_NOT_h2_ETC___d677,
	       IF_h2c_nextCmdFifo_notEmpty__53_OR_h2c_nextWri_ETC___d660[0] } ;
  assign v__h28019 = { h2c_writeError, h2c_readError } ;
  assign v__h28611 = { 32'd0, h2cDstAddrReg } ;
  assign v__h28916 = { 16'd0, mac_addr } ;
  assign v__h29069 = { 16'd0, dstMac } ;
  assign x3__h19464 = h2c_dataFifo_pwEnqueue$whas ? x_wget__h19250 : 512'd0 ;
  assign x__h19533 = h2c_dataFifo_rWrPtr + 10'd1 ;
  assign x__h19622 = h2c_dataFifo_rRdPtr + 10'd1 ;
  assign x__h4105 =
	     { mac_addr[7:0],
	       mac_addr[15:8],
	       mac_addr[23:16],
	       mac_addr[31:24],
	       mac_addr[39:32],
	       mac_addr[47:40] } ;
  assign x__h5048 =
	     { dstMac[7:0],
	       dstMac[15:8],
	       dstMac[23:16],
	       dstMac[31:24],
	       dstMac[39:32],
	       dstMac[47:40] } ;
  assign x_addr__h12431 = { pfn__h12482, 12'd0 } ;
  assign x_addr__h12961 = { c2h_nextWriteFifo$D_OUT[53:2], 12'd0 } ;
  assign x_addr__h20215 = { pfn__h20266, 12'd0 } ;
  assign x_addr__h20953 = { h2c_nextWriteFifo$D_OUT[21:2], 12'd0 } ;
  assign x_data__h21102 =
	     (h2c_dataFifo_rCache[522] &&
	      h2c_dataFifo_rCache[521:512] == h2c_dataFifo_rRdPtr) ?
	       h2c_dataFifo_rCache[511:0] :
	       h2c_dataFifo_memory$DOB ;
  assign x_dstPfn__h12537 =
	     c2h_nextCmdFifo$D_OUT[66:15] + { 39'd0, c2h_pageCnt } ;
  assign x_dstPfn__h20321 =
	     h2c_nextCmdFifo$D_OUT[34:15] + { 7'd0, h2c_pageCnt } ;
  assign x_wget__h19250 =
	     WILL_FIRE_RL_h2c_bufferReadDataFromNetwork ?
	       parser_rxOutFifo_rv[511:0] :
	       MUX_h2c_dataFifo_wDataIn$wset_1__VAL_2 ;
  always@(c2h_axiRd_warcache$wget)
  begin
    case (c2h_axiRd_warcache$wget)
      4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_c2h_axiRd_warcachewget_1_c2h_axiRd_warca_ETC__q2 =
	      c2h_axiRd_warcache$wget;
      default: CASE_c2h_axiRd_warcachewget_1_c2h_axiRd_warca_ETC__q2 = 4'd11;
    endcase
  end
  always@(c2h_axiWr_wawcache$wget)
  begin
    case (c2h_axiWr_wawcache$wget)
      4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_c2h_axiWr_wawcachewget_1_c2h_axiWr_wawca_ETC__q3 =
	      c2h_axiWr_wawcache$wget;
      default: CASE_c2h_axiWr_wawcachewget_1_c2h_axiWr_wawca_ETC__q3 = 4'd15;
    endcase
  end
  always@(h2c_axiRd_warcache$wget)
  begin
    case (h2c_axiRd_warcache$wget)
      4'd1, 4'd2, 4'd3, 4'd10, 4'd14, 4'd15:
	  CASE_h2c_axiRd_warcachewget_1_h2c_axiRd_warca_ETC__q4 =
	      h2c_axiRd_warcache$wget;
      default: CASE_h2c_axiRd_warcachewget_1_h2c_axiRd_warca_ETC__q4 = 4'd11;
    endcase
  end
  always@(h2c_axiWr_wawcache$wget)
  begin
    case (h2c_axiWr_wawcache$wget)
      4'd1, 4'd2, 4'd3, 4'd6, 4'd7, 4'd14:
	  CASE_h2c_axiWr_wawcachewget_1_h2c_axiWr_wawca_ETC__q5 =
	      h2c_axiWr_wawcache$wget;
      default: CASE_h2c_axiWr_wawcachewget_1_h2c_axiWr_wawca_ETC__q5 = 4'd15;
    endcase
  end

  // handling of inlined registers

  always@(posedge aclk)
  begin
    if (resetn == `BSV_RESET_VALUE)
      begin
        axiCtrl_readBusy <= `BSV_ASSIGNMENT_DELAY 1'd0;
	axiCtrl_readSlave_in_rv <= `BSV_ASSIGNMENT_DELAY 16'd10922;
	axiCtrl_readSlave_out_rv <= `BSV_ASSIGNMENT_DELAY
	    67'h2AAAAAAAAAAAAAAAA;
	axiCtrl_writeBusy <= `BSV_ASSIGNMENT_DELAY 1'd0;
	axiCtrl_writeSlave_addrIn_rv <= `BSV_ASSIGNMENT_DELAY 16'd10922;
	axiCtrl_writeSlave_dataIn_rv <= `BSV_ASSIGNMENT_DELAY
	    73'h0AAAAAAAAAAAAAAAAAA;
	axiCtrl_writeSlave_in_rv <= `BSV_ASSIGNMENT_DELAY
	    88'h2AAAAAAAAAAAAAAAAAAAAA;
	axiCtrl_writeSlave_out_rv <= `BSV_ASSIGNMENT_DELAY 3'd2;
	c2hDstAddrReg <= `BSV_ASSIGNMENT_DELAY 64'd0;
	c2hIntrEnReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	c2hSrcAddrReg <= `BSV_ASSIGNMENT_DELAY 32'd0;
	c2hStatus <= `BSV_ASSIGNMENT_DELAY 1'd0;
	c2h_dataCnt <= `BSV_ASSIGNMENT_DELAY 7'd0;
	c2h_dataFifo_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	c2h_pageCnt <= `BSV_ASSIGNMENT_DELAY 13'd0;
	c2h_readError <= `BSV_ASSIGNMENT_DELAY 1'd0;
	c2h_writeError <= `BSV_ASSIGNMENT_DELAY 1'd0;
	dstMac <= `BSV_ASSIGNMENT_DELAY 48'd0;
	h2cDstAddrReg <= `BSV_ASSIGNMENT_DELAY 32'd0;
	h2cIntrEnReg <= `BSV_ASSIGNMENT_DELAY 1'd0;
	h2cSrcAddrReg <= `BSV_ASSIGNMENT_DELAY 64'd0;
	h2cStatus <= `BSV_ASSIGNMENT_DELAY 1'd0;
	h2c_dataCnt <= `BSV_ASSIGNMENT_DELAY 7'd0;
	h2c_dataFifo_rCache <= `BSV_ASSIGNMENT_DELAY
	    523'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	h2c_dataFifo_rRdPtr <= `BSV_ASSIGNMENT_DELAY 10'd0;
	h2c_dataFifo_rWrPtr <= `BSV_ASSIGNMENT_DELAY 10'd0;
	h2c_pageCnt <= `BSV_ASSIGNMENT_DELAY 13'd0;
	h2c_readError <= `BSV_ASSIGNMENT_DELAY 1'd0;
	h2c_recCnt <= `BSV_ASSIGNMENT_DELAY 6'd0;
	h2c_writeError <= `BSV_ASSIGNMENT_DELAY 1'd0;
	parser_recState <= `BSV_ASSIGNMENT_DELAY 2'd0;
	parser_rxBufFifo_rv <= `BSV_ASSIGNMENT_DELAY
	    401'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	parser_rxInFifo_rv <= `BSV_ASSIGNMENT_DELAY
	    582'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	parser_rxOutFifo_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	parser_txBufFifo_rv <= `BSV_ASSIGNMENT_DELAY
	    113'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	parser_txCnt <= `BSV_ASSIGNMENT_DELAY 5'd0;
	parser_txInFifo_rv <= `BSV_ASSIGNMENT_DELAY
	    513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
	parser_txOutFifo_rv <= `BSV_ASSIGNMENT_DELAY
	    582'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
      end
    else
      begin
        if (axiCtrl_readBusy$EN)
	  axiCtrl_readBusy <= `BSV_ASSIGNMENT_DELAY axiCtrl_readBusy$D_IN;
	if (axiCtrl_readSlave_in_rv$EN)
	  axiCtrl_readSlave_in_rv <= `BSV_ASSIGNMENT_DELAY
	      axiCtrl_readSlave_in_rv$D_IN;
	if (axiCtrl_readSlave_out_rv$EN)
	  axiCtrl_readSlave_out_rv <= `BSV_ASSIGNMENT_DELAY
	      axiCtrl_readSlave_out_rv$D_IN;
	if (axiCtrl_writeBusy$EN)
	  axiCtrl_writeBusy <= `BSV_ASSIGNMENT_DELAY axiCtrl_writeBusy$D_IN;
	if (axiCtrl_writeSlave_addrIn_rv$EN)
	  axiCtrl_writeSlave_addrIn_rv <= `BSV_ASSIGNMENT_DELAY
	      axiCtrl_writeSlave_addrIn_rv$D_IN;
	if (axiCtrl_writeSlave_dataIn_rv$EN)
	  axiCtrl_writeSlave_dataIn_rv <= `BSV_ASSIGNMENT_DELAY
	      axiCtrl_writeSlave_dataIn_rv$D_IN;
	if (axiCtrl_writeSlave_in_rv$EN)
	  axiCtrl_writeSlave_in_rv <= `BSV_ASSIGNMENT_DELAY
	      axiCtrl_writeSlave_in_rv$D_IN;
	if (axiCtrl_writeSlave_out_rv$EN)
	  axiCtrl_writeSlave_out_rv <= `BSV_ASSIGNMENT_DELAY
	      axiCtrl_writeSlave_out_rv$D_IN;
	if (c2hDstAddrReg$EN)
	  c2hDstAddrReg <= `BSV_ASSIGNMENT_DELAY c2hDstAddrReg$D_IN;
	if (c2hIntrEnReg$EN)
	  c2hIntrEnReg <= `BSV_ASSIGNMENT_DELAY c2hIntrEnReg$D_IN;
	if (c2hSrcAddrReg$EN)
	  c2hSrcAddrReg <= `BSV_ASSIGNMENT_DELAY c2hSrcAddrReg$D_IN;
	if (c2hStatus$EN) c2hStatus <= `BSV_ASSIGNMENT_DELAY c2hStatus$D_IN;
	if (c2h_dataCnt$EN)
	  c2h_dataCnt <= `BSV_ASSIGNMENT_DELAY c2h_dataCnt$D_IN;
	if (c2h_dataFifo_rv$EN)
	  c2h_dataFifo_rv <= `BSV_ASSIGNMENT_DELAY c2h_dataFifo_rv$D_IN;
	if (c2h_pageCnt$EN)
	  c2h_pageCnt <= `BSV_ASSIGNMENT_DELAY c2h_pageCnt$D_IN;
	if (c2h_readError$EN)
	  c2h_readError <= `BSV_ASSIGNMENT_DELAY c2h_readError$D_IN;
	if (c2h_writeError$EN)
	  c2h_writeError <= `BSV_ASSIGNMENT_DELAY c2h_writeError$D_IN;
	if (dstMac$EN) dstMac <= `BSV_ASSIGNMENT_DELAY dstMac$D_IN;
	if (h2cDstAddrReg$EN)
	  h2cDstAddrReg <= `BSV_ASSIGNMENT_DELAY h2cDstAddrReg$D_IN;
	if (h2cIntrEnReg$EN)
	  h2cIntrEnReg <= `BSV_ASSIGNMENT_DELAY h2cIntrEnReg$D_IN;
	if (h2cSrcAddrReg$EN)
	  h2cSrcAddrReg <= `BSV_ASSIGNMENT_DELAY h2cSrcAddrReg$D_IN;
	if (h2cStatus$EN) h2cStatus <= `BSV_ASSIGNMENT_DELAY h2cStatus$D_IN;
	if (h2c_dataCnt$EN)
	  h2c_dataCnt <= `BSV_ASSIGNMENT_DELAY h2c_dataCnt$D_IN;
	if (h2c_dataFifo_rCache$EN)
	  h2c_dataFifo_rCache <= `BSV_ASSIGNMENT_DELAY
	      h2c_dataFifo_rCache$D_IN;
	if (h2c_dataFifo_rRdPtr$EN)
	  h2c_dataFifo_rRdPtr <= `BSV_ASSIGNMENT_DELAY
	      h2c_dataFifo_rRdPtr$D_IN;
	if (h2c_dataFifo_rWrPtr$EN)
	  h2c_dataFifo_rWrPtr <= `BSV_ASSIGNMENT_DELAY
	      h2c_dataFifo_rWrPtr$D_IN;
	if (h2c_pageCnt$EN)
	  h2c_pageCnt <= `BSV_ASSIGNMENT_DELAY h2c_pageCnt$D_IN;
	if (h2c_readError$EN)
	  h2c_readError <= `BSV_ASSIGNMENT_DELAY h2c_readError$D_IN;
	if (h2c_recCnt$EN)
	  h2c_recCnt <= `BSV_ASSIGNMENT_DELAY h2c_recCnt$D_IN;
	if (h2c_writeError$EN)
	  h2c_writeError <= `BSV_ASSIGNMENT_DELAY h2c_writeError$D_IN;
	if (parser_recState$EN)
	  parser_recState <= `BSV_ASSIGNMENT_DELAY parser_recState$D_IN;
	if (parser_rxBufFifo_rv$EN)
	  parser_rxBufFifo_rv <= `BSV_ASSIGNMENT_DELAY
	      parser_rxBufFifo_rv$D_IN;
	if (parser_rxInFifo_rv$EN)
	  parser_rxInFifo_rv <= `BSV_ASSIGNMENT_DELAY parser_rxInFifo_rv$D_IN;
	if (parser_rxOutFifo_rv$EN)
	  parser_rxOutFifo_rv <= `BSV_ASSIGNMENT_DELAY
	      parser_rxOutFifo_rv$D_IN;
	if (parser_txBufFifo_rv$EN)
	  parser_txBufFifo_rv <= `BSV_ASSIGNMENT_DELAY
	      parser_txBufFifo_rv$D_IN;
	if (parser_txCnt$EN)
	  parser_txCnt <= `BSV_ASSIGNMENT_DELAY parser_txCnt$D_IN;
	if (parser_txInFifo_rv$EN)
	  parser_txInFifo_rv <= `BSV_ASSIGNMENT_DELAY parser_txInFifo_rv$D_IN;
	if (parser_txOutFifo_rv$EN)
	  parser_txOutFifo_rv <= `BSV_ASSIGNMENT_DELAY
	      parser_txOutFifo_rv$D_IN;
      end
  end

  always@(posedge aclk or `BSV_RESET_EDGE resetn)
  if (resetn == `BSV_RESET_VALUE)
    begin
      axiCtrl_readSlave_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      axiCtrl_writeSlave_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      c2h_axiRd_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      c2h_axiWr_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      c2h_axisTX_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      h2c_axiRd_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      h2c_axiWr_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
      h2c_axisRx_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY 1'd1;
    end
  else
    begin
      if (axiCtrl_readSlave_isRst_isInReset$EN)
	axiCtrl_readSlave_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    axiCtrl_readSlave_isRst_isInReset$D_IN;
      if (axiCtrl_writeSlave_isRst_isInReset$EN)
	axiCtrl_writeSlave_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    axiCtrl_writeSlave_isRst_isInReset$D_IN;
      if (c2h_axiRd_isRst_isInReset$EN)
	c2h_axiRd_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    c2h_axiRd_isRst_isInReset$D_IN;
      if (c2h_axiWr_isRst_isInReset$EN)
	c2h_axiWr_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    c2h_axiWr_isRst_isInReset$D_IN;
      if (c2h_axisTX_isRst_isInReset$EN)
	c2h_axisTX_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    c2h_axisTX_isRst_isInReset$D_IN;
      if (h2c_axiRd_isRst_isInReset$EN)
	h2c_axiRd_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    h2c_axiRd_isRst_isInReset$D_IN;
      if (h2c_axiWr_isRst_isInReset$EN)
	h2c_axiWr_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    h2c_axiWr_isRst_isInReset$D_IN;
      if (h2c_axisRx_isRst_isInReset$EN)
	h2c_axisRx_isRst_isInReset <= `BSV_ASSIGNMENT_DELAY
	    h2c_axisRx_isRst_isInReset$D_IN;
    end

  // synopsys translate_off
  `ifdef BSV_NO_INITIAL_BLOCKS
  `else // not BSV_NO_INITIAL_BLOCKS
  initial
  begin
    axiCtrl_readBusy = 1'h0;
    axiCtrl_readSlave_in_rv = 16'hAAAA;
    axiCtrl_readSlave_isRst_isInReset = 1'h0;
    axiCtrl_readSlave_out_rv = 67'h2AAAAAAAAAAAAAAAA;
    axiCtrl_writeBusy = 1'h0;
    axiCtrl_writeSlave_addrIn_rv = 16'hAAAA;
    axiCtrl_writeSlave_dataIn_rv = 73'h0AAAAAAAAAAAAAAAAAA;
    axiCtrl_writeSlave_in_rv = 88'hAAAAAAAAAAAAAAAAAAAAAA;
    axiCtrl_writeSlave_isRst_isInReset = 1'h0;
    axiCtrl_writeSlave_out_rv = 3'h2;
    c2hDstAddrReg = 64'hAAAAAAAAAAAAAAAA;
    c2hIntrEnReg = 1'h0;
    c2hSrcAddrReg = 32'hAAAAAAAA;
    c2hStatus = 1'h0;
    c2h_axiRd_isRst_isInReset = 1'h0;
    c2h_axiWr_isRst_isInReset = 1'h0;
    c2h_axisTX_isRst_isInReset = 1'h0;
    c2h_dataCnt = 7'h2A;
    c2h_dataFifo_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    c2h_pageCnt = 13'h0AAA;
    c2h_readError = 1'h0;
    c2h_writeError = 1'h0;
    dstMac = 48'hAAAAAAAAAAAA;
    h2cDstAddrReg = 32'hAAAAAAAA;
    h2cIntrEnReg = 1'h0;
    h2cSrcAddrReg = 64'hAAAAAAAAAAAAAAAA;
    h2cStatus = 1'h0;
    h2c_axiRd_isRst_isInReset = 1'h0;
    h2c_axiWr_isRst_isInReset = 1'h0;
    h2c_axisRx_isRst_isInReset = 1'h0;
    h2c_dataCnt = 7'h2A;
    h2c_dataFifo_rCache =
	523'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    h2c_dataFifo_rRdPtr = 10'h2AA;
    h2c_dataFifo_rWrPtr = 10'h2AA;
    h2c_pageCnt = 13'h0AAA;
    h2c_readError = 1'h0;
    h2c_recCnt = 6'h2A;
    h2c_writeError = 1'h0;
    parser_recState = 2'h2;
    parser_rxBufFifo_rv =
	401'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    parser_rxInFifo_rv =
	582'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    parser_rxOutFifo_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    parser_txBufFifo_rv = 113'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    parser_txCnt = 5'h0A;
    parser_txInFifo_rv =
	513'h0AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
    parser_txOutFifo_rv =
	582'h2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA;
  end
  `endif // BSV_NO_INITIAL_BLOCKS
  // synopsys translate_on

  // handling of system tasks

  // synopsys translate_off
  always@(negedge aclk)
  begin
    #0;
    if (resetn != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_axiCtrl_axiReadSpecial_1 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_1) &&
	  (WILL_FIRE_RL_axiCtrl_axiReadSpecial_2 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_2 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_3 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_4 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_4 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8))
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 245, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_axiCtrl_axiReadSpecial_1,\n  RL_axiCtrl_axiReadSpecialIsHandled_1] and [RL_axiCtrl_axiReadSpecial_2,\n  RL_axiCtrl_axiReadSpecialIsHandled_2, RL_axiCtrl_axiReadSpecial_3,\n  RL_axiCtrl_axiReadSpecialIsHandled_3, RL_axiCtrl_axiReadSpecial_4,\n  RL_axiCtrl_axiReadSpecialIsHandled_4, RL_axiCtrl_axiReadSpecial_5,\n  RL_axiCtrl_axiReadSpecialIsHandled_5, RL_axiCtrl_axiReadSpecial_6,\n  RL_axiCtrl_axiReadSpecialIsHandled_6, RL_axiCtrl_axiReadSpecial_7,\n  RL_axiCtrl_axiReadSpecialIsHandled_7, RL_axiCtrl_axiReadSpecial_8,\n  RL_axiCtrl_axiReadSpecialIsHandled_8] ) fired in the same clock cycle.\n");
    if (resetn != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_axiCtrl_axiReadSpecial_2 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_2) &&
	  (WILL_FIRE_RL_axiCtrl_axiReadSpecial_3 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_4 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_4 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8))
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 245, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_axiCtrl_axiReadSpecial_2,\n  RL_axiCtrl_axiReadSpecialIsHandled_2] and [RL_axiCtrl_axiReadSpecial_3,\n  RL_axiCtrl_axiReadSpecialIsHandled_3, RL_axiCtrl_axiReadSpecial_4,\n  RL_axiCtrl_axiReadSpecialIsHandled_4, RL_axiCtrl_axiReadSpecial_5,\n  RL_axiCtrl_axiReadSpecialIsHandled_5, RL_axiCtrl_axiReadSpecial_6,\n  RL_axiCtrl_axiReadSpecialIsHandled_6, RL_axiCtrl_axiReadSpecial_7,\n  RL_axiCtrl_axiReadSpecialIsHandled_7, RL_axiCtrl_axiReadSpecial_8,\n  RL_axiCtrl_axiReadSpecialIsHandled_8] ) fired in the same clock cycle.\n");
    if (resetn != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_axiCtrl_axiReadSpecial_3 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_3) &&
	  (WILL_FIRE_RL_axiCtrl_axiReadSpecial_4 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_4 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8))
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 245, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_axiCtrl_axiReadSpecial_3,\n  RL_axiCtrl_axiReadSpecialIsHandled_3] and [RL_axiCtrl_axiReadSpecial_4,\n  RL_axiCtrl_axiReadSpecialIsHandled_4, RL_axiCtrl_axiReadSpecial_5,\n  RL_axiCtrl_axiReadSpecialIsHandled_5, RL_axiCtrl_axiReadSpecial_6,\n  RL_axiCtrl_axiReadSpecialIsHandled_6, RL_axiCtrl_axiReadSpecial_7,\n  RL_axiCtrl_axiReadSpecialIsHandled_7, RL_axiCtrl_axiReadSpecial_8,\n  RL_axiCtrl_axiReadSpecialIsHandled_8] ) fired in the same clock cycle.\n");
    if (resetn != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_axiCtrl_axiReadSpecial_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_5) &&
	  (WILL_FIRE_RL_axiCtrl_axiReadSpecial_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8))
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 245, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_axiCtrl_axiReadSpecial_5,\n  RL_axiCtrl_axiReadSpecialIsHandled_5] and [RL_axiCtrl_axiReadSpecial_6,\n  RL_axiCtrl_axiReadSpecialIsHandled_6, RL_axiCtrl_axiReadSpecial_7,\n  RL_axiCtrl_axiReadSpecialIsHandled_7, RL_axiCtrl_axiReadSpecial_8,\n  RL_axiCtrl_axiReadSpecialIsHandled_8] ) fired in the same clock cycle.\n");
    if (resetn != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_axiCtrl_axiReadSpecial_4 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_4) &&
	  (WILL_FIRE_RL_axiCtrl_axiReadSpecial_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8))
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 245, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_axiCtrl_axiReadSpecial_4,\n  RL_axiCtrl_axiReadSpecialIsHandled_4] and [RL_axiCtrl_axiReadSpecial_5,\n  RL_axiCtrl_axiReadSpecialIsHandled_5, RL_axiCtrl_axiReadSpecial_6,\n  RL_axiCtrl_axiReadSpecialIsHandled_6, RL_axiCtrl_axiReadSpecial_7,\n  RL_axiCtrl_axiReadSpecialIsHandled_7, RL_axiCtrl_axiReadSpecial_8,\n  RL_axiCtrl_axiReadSpecialIsHandled_8] ) fired in the same clock cycle.\n");
    if (resetn != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_axiCtrl_axiReadSpecial_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_6) &&
	  (WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8))
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 245, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_axiCtrl_axiReadSpecial_6,\n  RL_axiCtrl_axiReadSpecialIsHandled_6] and [RL_axiCtrl_axiReadSpecial_7,\n  RL_axiCtrl_axiReadSpecialIsHandled_7, RL_axiCtrl_axiReadSpecial_8,\n  RL_axiCtrl_axiReadSpecialIsHandled_8] ) fired in the same clock cycle.\n");
    if (resetn != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7) &&
	  (WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8))
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 245, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_axiCtrl_axiReadSpecial_7,\n  RL_axiCtrl_axiReadSpecialIsHandled_7] and [RL_axiCtrl_axiReadSpecial_8,\n  RL_axiCtrl_axiReadSpecialIsHandled_8] ) fired in the same clock cycle.\n");
    if (resetn != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_axiCtrl_axiReadSpecial ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled) &&
	  (WILL_FIRE_RL_axiCtrl_axiReadSpecial_1 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_1 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_2 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_2 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_3 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_4 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_4 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8))
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 245, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_axiCtrl_axiReadSpecial,\n  RL_axiCtrl_axiReadSpecialIsHandled] and [RL_axiCtrl_axiReadSpecial_1,\n  RL_axiCtrl_axiReadSpecialIsHandled_1, RL_axiCtrl_axiReadSpecial_2,\n  RL_axiCtrl_axiReadSpecialIsHandled_2, RL_axiCtrl_axiReadSpecial_3,\n  RL_axiCtrl_axiReadSpecialIsHandled_3, RL_axiCtrl_axiReadSpecial_4,\n  RL_axiCtrl_axiReadSpecialIsHandled_4, RL_axiCtrl_axiReadSpecial_5,\n  RL_axiCtrl_axiReadSpecialIsHandled_5, RL_axiCtrl_axiReadSpecial_6,\n  RL_axiCtrl_axiReadSpecialIsHandled_6, RL_axiCtrl_axiReadSpecial_7,\n  RL_axiCtrl_axiReadSpecialIsHandled_7, RL_axiCtrl_axiReadSpecial_8,\n  RL_axiCtrl_axiReadSpecialIsHandled_8] ) fired in the same clock cycle.\n");
    if (resetn != `BSV_RESET_VALUE)
      if ((WILL_FIRE_RL_axiCtrl_axiReadSpecial ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_1 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_1 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_2 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_2 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_3 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_3 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_4 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_4 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_5 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_6 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_7 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecial_8 ||
	   WILL_FIRE_RL_axiCtrl_axiReadSpecialIsHandled_8) &&
	  WILL_FIRE_RL_axiCtrl_axiReadFallback)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 245, column 18: (R0001)\n  Mutually exclusive rules (from the ME sets [RL_axiCtrl_axiReadSpecial,\n  RL_axiCtrl_axiReadSpecialIsHandled, RL_axiCtrl_axiReadSpecial_1,\n  RL_axiCtrl_axiReadSpecialIsHandled_1, RL_axiCtrl_axiReadSpecial_2,\n  RL_axiCtrl_axiReadSpecialIsHandled_2, RL_axiCtrl_axiReadSpecial_3,\n  RL_axiCtrl_axiReadSpecialIsHandled_3, RL_axiCtrl_axiReadSpecial_4,\n  RL_axiCtrl_axiReadSpecialIsHandled_4, RL_axiCtrl_axiReadSpecial_5,\n  RL_axiCtrl_axiReadSpecialIsHandled_5, RL_axiCtrl_axiReadSpecial_6,\n  RL_axiCtrl_axiReadSpecialIsHandled_6, RL_axiCtrl_axiReadSpecial_7,\n  RL_axiCtrl_axiReadSpecialIsHandled_7, RL_axiCtrl_axiReadSpecial_8,\n  RL_axiCtrl_axiReadSpecialIsHandled_8] and [RL_axiCtrl_axiReadFallback] )\n  fired in the same clock cycle.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_1 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_1 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_1 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd1 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_1 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_2 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_2 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_2 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_2 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_2 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd2 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_2 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_2 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd2 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_2 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_3 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_3 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_3 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_3 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_3 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_3 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	  IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801[7])
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_3 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods read and write of\n  module instance c2hDstAddrReg.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_3 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd3 &&
	  !axiCtrl_writeBusy &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  c2h_nextCmdFifo$FULL_N)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_3 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 &&
	  IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801[7])
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_3 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods read and write of\n  module instance c2hSrcAddrReg.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_3 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd3 &&
	  !axiCtrl_writeBusy &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  c2h_nextCmdFifo$FULL_N)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_3 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_3 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd3 &&
	  !axiCtrl_writeBusy &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  c2h_nextCmdFifo$FULL_N)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_3 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_4 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_3 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_4 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_4 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_4 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_4 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_4 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_4 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_4 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_4 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd4 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_4 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_4 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd4 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_4 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_4 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd4 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_4 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_4 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd4 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_4 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_5 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_4 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_5 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_5 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_3 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_5 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_5 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_5 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_5 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_5 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_5 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_5 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_5 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd5 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_5 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_5 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd5 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_5 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_5 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd5 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_5 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_5 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd5 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_5 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_5 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd5 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_5 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_5 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecial_5 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_4 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_3 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_6 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial_5 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd6 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial_5 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd6 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd6 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd6 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd6 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd6 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_6 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_6 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecial_6 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_5 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecial_5 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_4 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_3 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_7 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801[7])
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_6 called conflicting methods read and write of\n  module instance h2cDstAddrReg.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_6 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd7 &&
	  !axiCtrl_writeBusy &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  h2c_nextCmdFifo$FULL_N)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_6 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  IF_axiCtrl_writeSlave_in_rv_port0__read__19_BI_ETC___d801[7])
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_5 called conflicting methods read and write of\n  module instance h2cSrcAddrReg.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_5 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd7 &&
	  !axiCtrl_writeBusy &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  h2c_nextCmdFifo$FULL_N)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_5 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd7 &&
	  !axiCtrl_writeBusy &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  h2c_nextCmdFifo$FULL_N)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd7 &&
	  !axiCtrl_writeBusy &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  h2c_nextCmdFifo$FULL_N)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd7 &&
	  !axiCtrl_writeBusy &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  h2c_nextCmdFifo$FULL_N)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd7 &&
	  !axiCtrl_writeBusy &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  h2c_nextCmdFifo$FULL_N)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd7 &&
	  !axiCtrl_writeBusy &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  h2c_nextCmdFifo$FULL_N)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_7 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_7)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_7 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecial_7 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_6)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_6 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecial_6 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_5)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_5 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecial_5 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_4 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_3 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_2 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled_1 called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecialIsHandled called conflicting methods wset and\n  wset of module instance axiCtrl_writeIsHandled.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecialIsHandled_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 345, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecialIsHandled_8 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_7 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_7 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd10 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_7 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_6 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_6 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd10 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_6 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_5 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_5 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd10 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_5 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_4 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd10 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_4 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_3 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd10 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_3 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_2 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd10 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_2 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_1 &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd10 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial_1 called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port0__read and\n  port0__write of module instance axiCtrl_writeSlave_in_rv.\n");
    if (resetn != `BSV_RESET_VALUE)
      if (WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial_8 &&
	  WILL_FIRE_RL_axiCtrl_1_axiWriteSpecial &&
	  axiCtrl_writeSlave_in_rv[81:78] == 4'd10 &&
	  axiCtrl_writeSlave_in_rv[87] &&
	  !axiCtrl_writeBusy)
	$display("Error: \"/home/torben/Dokumente/Arbeit/TapascoSVM/NetworkPageDMA/libraries/BlueAXI/src/GenericAxi4LiteSlave.bsv\", line 334, column 18: (R0002)\n  Conflict-free rules RL_axiCtrl_1_axiWriteSpecial_8 and\n  RL_axiCtrl_1_axiWriteSpecial called conflicting methods port1__read and\n  port1__write of module instance axiCtrl_writeSlave_out_rv.\n");
  end
  // synopsys translate_on
endmodule  // mkNetworkPageDMA

